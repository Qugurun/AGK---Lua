#pragma once

// ***************************************
// *         AGK - Lua                   *
// *                                     *
// *       By Sean Regan				 *
// *   AGK made by The Game Creators     *
// *                                     *
// *                                     *
// ***************************************

#include"agk.h"

extern "C" {
#include "lua.h"
#include "lualib.h"
#include "lauxlib.h"
}

#include <vector>
#include <string>

class agkLua
{
private:
	agkLua();

public:
	static inline void RegisterFunctions(lua_State *luaState)
	{
		lua_register(luaState, "SetScreenResolution", agkLua::SetScreenResolution);
		lua_register(luaState, "SetWindowSize", agkLua::SetWindowSize);
		lua_register(luaState, "GetDeviceWidth", agkLua::GetDeviceWidth);
		lua_register(luaState, "GetRealDeviceWidth", agkLua::GetRealDeviceWidth);
		lua_register(luaState, "GetDeviceHeight", agkLua::GetDeviceHeight);
		lua_register(luaState, "GetRealDeviceHeight", agkLua::GetRealDeviceHeight);
		lua_register(luaState, "GetMaxDeviceWidth", agkLua::GetMaxDeviceWidth);
		lua_register(luaState, "GetMaxDeviceHeight", agkLua::GetMaxDeviceHeight);
		lua_register(luaState, "SetVSync", agkLua::SetVSync);
		lua_register(luaState, "SetSyncRate", agkLua::SetSyncRate);
		lua_register(luaState, "SetVirtualResolution", agkLua::SetVirtualResolution);
		lua_register(luaState, "SetDisplayAspect", agkLua::SetDisplayAspect);
		lua_register(luaState, "GetVirtualWidth", agkLua::GetVirtualWidth);
		lua_register(luaState, "GetVirtualHeight", agkLua::GetVirtualHeight);
		lua_register(luaState, "GetScreenBoundsLeft", agkLua::GetScreenBoundsLeft);
		lua_register(luaState, "GetScreenBoundsRight", agkLua::GetScreenBoundsRight);
		lua_register(luaState, "GetScreenBoundsTop", agkLua::GetScreenBoundsTop);
		lua_register(luaState, "GetScreenBoundsBottom", agkLua::GetScreenBoundsBottom);
		lua_register(luaState, "GetDisplayAspect", agkLua::GetDisplayAspect);
		lua_register(luaState, "GetOrientation", agkLua::GetOrientation);
		lua_register(luaState, "GetResumed", agkLua::GetResumed);
		lua_register(luaState, "GetResumed2", agkLua::GetResumed2);
		lua_register(luaState, "GetDeviceName", agkLua::GetDeviceName);
		lua_register(luaState, "GetDeviceName", agkLua::GetDeviceName);
		lua_register(luaState, "GetDeviceBaseName", agkLua::GetDeviceBaseName);
		lua_register(luaState, "GetDeviceType", agkLua::GetDeviceType);
		lua_register(luaState, "GetAppName", agkLua::GetAppName);
		lua_register(luaState, "GetCL", agkLua::GetCL);
		lua_register(luaState, "GetAppName", agkLua::GetAppName);
		lua_register(luaState, "SetWindowTitle", agkLua::SetWindowTitle);
		lua_register(luaState, "UpdateDeviceSize", agkLua::UpdateDeviceSize);
		lua_register(luaState, "StepPhysics", agkLua::StepPhysics);
		lua_register(luaState, "Sync", agkLua::Sync);
		lua_register(luaState, "Break", agkLua::Break);
		lua_register(luaState, "Update", agkLua::Update);
		lua_register(luaState, "Update2D", agkLua::Update2D);
		lua_register(luaState, "Update3D", agkLua::Update3D);
		lua_register(luaState, "DrawAllLines", agkLua::DrawAllLines);
		lua_register(luaState, "Render2DBack", agkLua::Render2DBack);
		lua_register(luaState, "Render2DFront", agkLua::Render2DFront);
		lua_register(luaState, "Render3D", agkLua::Render3D);
		lua_register(luaState, "Render", agkLua::Render);
		lua_register(luaState, "Swap", agkLua::Swap);
		lua_register(luaState, "UpdateInput", agkLua::UpdateInput);
		lua_register(luaState, "ClearScreen", agkLua::ClearScreen);
		lua_register(luaState, "ClearDepthBuffer", agkLua::ClearDepthBuffer);
		lua_register(luaState, "Sleep", agkLua::Sleep);
		lua_register(luaState, "Timer", agkLua::Timer);
		lua_register(luaState, "ResetTimer", agkLua::ResetTimer);
		lua_register(luaState, "GetRunTime", agkLua::GetRunTime);
		lua_register(luaState, "GetSeconds", agkLua::GetSeconds);
		lua_register(luaState, "GetFrameTime", agkLua::GetFrameTime);
		lua_register(luaState, "GetMilliseconds", agkLua::GetMilliseconds);
		lua_register(luaState, "GetDeviceLanguage", agkLua::GetDeviceLanguage);
		lua_register(luaState, "SetSleepMode", agkLua::SetSleepMode);
		lua_register(luaState, "SetExpansionFileKey", agkLua::SetExpansionFileKey);
		lua_register(luaState, "SetExpansionFileVersion", agkLua::SetExpansionFileVersion);
		lua_register(luaState, "GetExpansionFileState", agkLua::GetExpansionFileState);
		lua_register(luaState, "DownloadExpansionFile", agkLua::DownloadExpansionFile);
		lua_register(luaState, "GetExpansionFileProgress", agkLua::GetExpansionFileProgress);
		lua_register(luaState, "GetDeviceID", agkLua::GetDeviceID);
		lua_register(luaState, "GetDeviceID", agkLua::GetDeviceID);
		lua_register(luaState, "Sha1", agkLua::Sha1);
		lua_register(luaState, "Sha1", agkLua::Sha1);
		lua_register(luaState, "HTTPEncode", agkLua::HTTPEncode);
		lua_register(luaState, "HTTPEncode", agkLua::HTTPEncode);
		lua_register(luaState, "HTTPDecode", agkLua::HTTPDecode);
		lua_register(luaState, "HTTPDecode", agkLua::HTTPDecode);
		lua_register(luaState, "GetNumProcessors", agkLua::GetNumProcessors);
		lua_register(luaState, "SortArray", agkLua::SortArray);
		lua_register(luaState, "SortFloatToUINT", agkLua::SortFloatToUINT);
		lua_register(luaState, "SortUINTToFloat", agkLua::SortUINTToFloat);
		lua_register(luaState, "SortIntToUINT", agkLua::SortIntToUINT);
		lua_register(luaState, "SortUINTToInt", agkLua::SortUINTToInt);
		lua_register(luaState, "SetRandomSeed", agkLua::SetRandomSeed);
		lua_register(luaState, "Random", agkLua::Random);
		lua_register(luaState, "Random", agkLua::Random);
		lua_register(luaState, "RandomSign", agkLua::RandomSign);
		lua_register(luaState, "SetRandomSeed2", agkLua::SetRandomSeed2);
		lua_register(luaState, "Random2", agkLua::Random2);
		lua_register(luaState, "Random2", agkLua::Random2);
		lua_register(luaState, "Sin", agkLua::Sin);
		lua_register(luaState, "Cos", agkLua::Cos);
		lua_register(luaState, "Tan", agkLua::Tan);
		lua_register(luaState, "SinRad", agkLua::SinRad);
		lua_register(luaState, "CosRad", agkLua::CosRad);
		lua_register(luaState, "TanRad", agkLua::TanRad);
		lua_register(luaState, "ASin", agkLua::ASin);
		lua_register(luaState, "ACos", agkLua::ACos);
		lua_register(luaState, "ATan", agkLua::ATan);
		lua_register(luaState, "ATan2", agkLua::ATan2);
		lua_register(luaState, "ATanFull", agkLua::ATanFull);
		lua_register(luaState, "ASinRad", agkLua::ASinRad);
		lua_register(luaState, "ACosRad", agkLua::ACosRad);
		lua_register(luaState, "ATanRad", agkLua::ATanRad);
		lua_register(luaState, "ATan2Rad", agkLua::ATan2Rad);
		lua_register(luaState, "ATanFullRad", agkLua::ATanFullRad);
		lua_register(luaState, "Trunc", agkLua::Trunc);
		lua_register(luaState, "Floor", agkLua::Floor);
		lua_register(luaState, "Ceil", agkLua::Ceil);
		lua_register(luaState, "Round", agkLua::Round);
		lua_register(luaState, "Sqrt", agkLua::Sqrt);
		lua_register(luaState, "Abs", agkLua::Abs);
		lua_register(luaState, "Mod", agkLua::Mod);
		lua_register(luaState, "FMod", agkLua::FMod);
		lua_register(luaState, "Pow", agkLua::Pow);
		lua_register(luaState, "SetAlphaTestThreshold", agkLua::SetAlphaTestThreshold);
		lua_register(luaState, "SetGenerateMipmaps", agkLua::SetGenerateMipmaps);
		lua_register(luaState, "SetOrientationAllowed", agkLua::SetOrientationAllowed);
		lua_register(luaState, "SetTransitionMode", agkLua::SetTransitionMode);
		lua_register(luaState, "SetSortTextures", agkLua::SetSortTextures);
		lua_register(luaState, "SetSortDepth", agkLua::SetSortDepth);
		lua_register(luaState, "SetSortTransparentDepth", agkLua::SetSortTransparentDepth);
		lua_register(luaState, "SetSortCreated", agkLua::SetSortCreated);
		lua_register(luaState, "ScreenFPS", agkLua::ScreenFPS);
		lua_register(luaState, "GetPolygonsDrawn", agkLua::GetPolygonsDrawn);
		lua_register(luaState, "GetVerticesProcessed", agkLua::GetVerticesProcessed);
		lua_register(luaState, "EnableClearDepth", agkLua::EnableClearDepth);
		lua_register(luaState, "EnableClearColor", agkLua::EnableClearColor);
		lua_register(luaState, "SetBorderColor", agkLua::SetBorderColor);
		lua_register(luaState, "SetClearColor", agkLua::SetClearColor);
		lua_register(luaState, "BindDefaultFramebuffer", agkLua::BindDefaultFramebuffer);
		lua_register(luaState, "SetDefaultMagFilter", agkLua::SetDefaultMagFilter);
		lua_register(luaState, "SetDefaultMinFilter", agkLua::SetDefaultMinFilter);
		lua_register(luaState, "SetDefaultWrapU", agkLua::SetDefaultWrapU);
		lua_register(luaState, "SetDefaultWrapV", agkLua::SetDefaultWrapV);
		lua_register(luaState, "SetViewOffset", agkLua::SetViewOffset);
		lua_register(luaState, "SetViewZoom", agkLua::SetViewZoom);
		lua_register(luaState, "SetViewZoomMode", agkLua::SetViewZoomMode);
		lua_register(luaState, "GetViewOffsetX", agkLua::GetViewOffsetX);
		lua_register(luaState, "GetViewOffsetY", agkLua::GetViewOffsetY);
		lua_register(luaState, "GetViewZoom", agkLua::GetViewZoom);
		lua_register(luaState, "SetScissor", agkLua::SetScissor);
		lua_register(luaState, "SetIntendedDeviceSize", agkLua::SetIntendedDeviceSize);
		lua_register(luaState, "DebugInfo", agkLua::DebugInfo);
		lua_register(luaState, "Error", agkLua::Error);
		lua_register(luaState, "Warning", agkLua::Warning);
		lua_register(luaState, "SetErrorMode", agkLua::SetErrorMode);
		lua_register(luaState, "GetLastError", agkLua::GetLastError);
		lua_register(luaState, "GetLastError", agkLua::GetLastError);
		lua_register(luaState, "GetErrorOccurred", agkLua::GetErrorOccurred);
		lua_register(luaState, "SetWarningCallback", agkLua::SetWarningCallback);
		lua_register(luaState, "SetErrorCallback", agkLua::SetErrorCallback);
		lua_register(luaState, "SetDebugCallback", agkLua::SetDebugCallback);
		lua_register(luaState, "Message", agkLua::Message);
		lua_register(luaState, "GetImagePtr", agkLua::GetImagePtr);
		lua_register(luaState, "LoadImage", agkLua::LoadImage);
		lua_register(luaState, "LoadImage", agkLua::LoadImage);
		lua_register(luaState, "LoadImage", agkLua::LoadImage);
		lua_register(luaState, "LoadImage", agkLua::LoadImage);
		lua_register(luaState, "LoadSubImage", agkLua::LoadSubImage);
		lua_register(luaState, "LoadSubImage", agkLua::LoadSubImage);
		lua_register(luaState, "CreateImageColor", agkLua::CreateImageColor);
		lua_register(luaState, "CreateImageColor", agkLua::CreateImageColor);
		lua_register(luaState, "CreateRenderImage", agkLua::CreateRenderImage);
		lua_register(luaState, "CreateRenderImage", agkLua::CreateRenderImage);
		lua_register(luaState, "GetImageExists", agkLua::GetImageExists);
		lua_register(luaState, "DeleteImage", agkLua::DeleteImage);
		lua_register(luaState, "DeleteAllImages", agkLua::DeleteAllImages);
		lua_register(luaState, "GetImageWidth", agkLua::GetImageWidth);
		lua_register(luaState, "GetImageHeight", agkLua::GetImageHeight);
		lua_register(luaState, "SetImageMinFilter", agkLua::SetImageMinFilter);
		lua_register(luaState, "SetImageMagFilter", agkLua::SetImageMagFilter);
		lua_register(luaState, "SetImageWrapU", agkLua::SetImageWrapU);
		lua_register(luaState, "SetImageWrapV", agkLua::SetImageWrapV);
		lua_register(luaState, "SetImageMask", agkLua::SetImageMask);
		lua_register(luaState, "SaveImage", agkLua::SaveImage);
		lua_register(luaState, "CopyImage", agkLua::CopyImage);
		lua_register(luaState, "CopyImage", agkLua::CopyImage);
		lua_register(luaState, "GetImage", agkLua::GetImage);
		lua_register(luaState, "GetImage", agkLua::GetImage);
		lua_register(luaState, "GetImageFilename", agkLua::GetImageFilename);
		lua_register(luaState, "SetImageSavePixels", agkLua::SetImageSavePixels);
		lua_register(luaState, "SetImageTransparentColor", agkLua::SetImageTransparentColor);
		lua_register(luaState, "ChooseImage", agkLua::ChooseImage);
		lua_register(luaState, "ShowChooseImageScreen", agkLua::ShowChooseImageScreen);
		lua_register(luaState, "ChooseInternal", agkLua::ChooseInternal);
		lua_register(luaState, "GetChosenImage", agkLua::GetChosenImage);
		lua_register(luaState, "IsChoosingImage", agkLua::IsChoosingImage);
		lua_register(luaState, "ShowImageCaptureScreen", agkLua::ShowImageCaptureScreen);
		lua_register(luaState, "CaptureImage", agkLua::CaptureImage);
		lua_register(luaState, "CaptureInternal", agkLua::CaptureInternal);
		lua_register(luaState, "CancelCapture", agkLua::CancelCapture);
		lua_register(luaState, "GetCapturedImage", agkLua::GetCapturedImage);
		lua_register(luaState, "IsCapturingImage", agkLua::IsCapturingImage);
		lua_register(luaState, "DecodeQRCode", agkLua::DecodeQRCode);
		lua_register(luaState, "EncodeQRCode", agkLua::EncodeQRCode);
		lua_register(luaState, "PrintImage", agkLua::PrintImage);
		lua_register(luaState, "SetRenderToImage", agkLua::SetRenderToImage);
		lua_register(luaState, "SetRenderToScreen", agkLua::SetRenderToScreen);
		lua_register(luaState, "IsSupportedDepthTexture", agkLua::IsSupportedDepthTexture);
		lua_register(luaState, "GetSpritePtr", agkLua::GetSpritePtr);
		lua_register(luaState, "GetSpriteImageID", agkLua::GetSpriteImageID);
		lua_register(luaState, "CreateSprite", agkLua::CreateSprite);
		lua_register(luaState, "LoadSprite", agkLua::LoadSprite);
		lua_register(luaState, "CreateSprite", agkLua::CreateSprite);
		lua_register(luaState, "LoadSprite", agkLua::LoadSprite);
		lua_register(luaState, "CreateDummySprite", agkLua::CreateDummySprite);
		lua_register(luaState, "CreateDummySprite", agkLua::CreateDummySprite);
		lua_register(luaState, "CloneSprite", agkLua::CloneSprite);
		lua_register(luaState, "CloneSprite", agkLua::CloneSprite);
		lua_register(luaState, "DeleteSprite", agkLua::DeleteSprite);
		lua_register(luaState, "DeleteAllSprites", agkLua::DeleteAllSprites);
		lua_register(luaState, "SetSpritePosition", agkLua::SetSpritePosition);
		lua_register(luaState, "SetSpritePositionByOffset", agkLua::SetSpritePositionByOffset);
		lua_register(luaState, "SetSpriteX", agkLua::SetSpriteX);
		lua_register(luaState, "SetSpriteY", agkLua::SetSpriteY);
		lua_register(luaState, "SetSpriteAngle", agkLua::SetSpriteAngle);
		lua_register(luaState, "SetSpriteAngleRad", agkLua::SetSpriteAngleRad);
		lua_register(luaState, "SetSpriteDepth", agkLua::SetSpriteDepth);
		lua_register(luaState, "SetSpriteFlip", agkLua::SetSpriteFlip);
		lua_register(luaState, "SetSpriteSnap", agkLua::SetSpriteSnap);
		lua_register(luaState, "SetSpriteVisible", agkLua::SetSpriteVisible);
		lua_register(luaState, "SetSpriteActive", agkLua::SetSpriteActive);
		lua_register(luaState, "SetSpriteImage", agkLua::SetSpriteImage);
		lua_register(luaState, "SetSpriteImage", agkLua::SetSpriteImage);
		lua_register(luaState, "SetSpriteAdditionalImage", agkLua::SetSpriteAdditionalImage);
		lua_register(luaState, "SetSpriteUV", agkLua::SetSpriteUV);
		lua_register(luaState, "ResetSpriteUV", agkLua::ResetSpriteUV);
		lua_register(luaState, "GetSpriteExists", agkLua::GetSpriteExists);
		lua_register(luaState, "GetSpriteX", agkLua::GetSpriteX);
		lua_register(luaState, "GetSpriteY", agkLua::GetSpriteY);
		lua_register(luaState, "GetSpriteXByOffset", agkLua::GetSpriteXByOffset);
		lua_register(luaState, "GetSpriteYByOffset", agkLua::GetSpriteYByOffset);
		lua_register(luaState, "GetSpriteWidth", agkLua::GetSpriteWidth);
		lua_register(luaState, "GetSpriteHeight", agkLua::GetSpriteHeight);
		lua_register(luaState, "GetSpriteAngle", agkLua::GetSpriteAngle);
		lua_register(luaState, "GetSpriteAngleRad", agkLua::GetSpriteAngleRad);
		lua_register(luaState, "GetSpriteScaleX", agkLua::GetSpriteScaleX);
		lua_register(luaState, "GetSpriteScaleY", agkLua::GetSpriteScaleY);
		lua_register(luaState, "GetSpriteHitTest", agkLua::GetSpriteHitTest);
		lua_register(luaState, "GetSpriteDepth", agkLua::GetSpriteDepth);
		lua_register(luaState, "GetSpriteColorRed", agkLua::GetSpriteColorRed);
		lua_register(luaState, "GetSpriteColorGreen", agkLua::GetSpriteColorGreen);
		lua_register(luaState, "GetSpriteColorBlue", agkLua::GetSpriteColorBlue);
		lua_register(luaState, "GetSpriteColorAlpha", agkLua::GetSpriteColorAlpha);
		lua_register(luaState, "GetSpritePlaying", agkLua::GetSpritePlaying);
		lua_register(luaState, "GetSpriteVisible", agkLua::GetSpriteVisible);
		lua_register(luaState, "GetSpriteActive", agkLua::GetSpriteActive);
		lua_register(luaState, "GetSpriteGroup", agkLua::GetSpriteGroup);
		lua_register(luaState, "GetSpriteXFromPixel", agkLua::GetSpriteXFromPixel);
		lua_register(luaState, "GetSpriteYFromPixel", agkLua::GetSpriteYFromPixel);
		lua_register(luaState, "GetSpritePixelFromX", agkLua::GetSpritePixelFromX);
		lua_register(luaState, "GetSpritePixelFromY", agkLua::GetSpritePixelFromY);
		lua_register(luaState, "GetWorldXFromSprite", agkLua::GetWorldXFromSprite);
		lua_register(luaState, "GetWorldYFromSprite", agkLua::GetWorldYFromSprite);
		lua_register(luaState, "GetSpriteXFromWorld", agkLua::GetSpriteXFromWorld);
		lua_register(luaState, "GetSpriteYFromWorld", agkLua::GetSpriteYFromWorld);
		lua_register(luaState, "SetSpriteSize", agkLua::SetSpriteSize);
		lua_register(luaState, "SetSpriteAnimation", agkLua::SetSpriteAnimation);
		lua_register(luaState, "AddSpriteAnimationFrame", agkLua::AddSpriteAnimationFrame);
		lua_register(luaState, "ClearSpriteAnimationFrames", agkLua::ClearSpriteAnimationFrames);
		lua_register(luaState, "SetSpriteSpeed", agkLua::SetSpriteSpeed);
		lua_register(luaState, "PlaySprite", agkLua::PlaySprite);
		lua_register(luaState, "PlaySprite", agkLua::PlaySprite);
		lua_register(luaState, "PlaySprite", agkLua::PlaySprite);
		lua_register(luaState, "PlaySprite", agkLua::PlaySprite);
		lua_register(luaState, "StopSprite", agkLua::StopSprite);
		lua_register(luaState, "ResumeSprite", agkLua::ResumeSprite);
		lua_register(luaState, "SetSpriteFrame", agkLua::SetSpriteFrame);
		lua_register(luaState, "GetSpriteCurrentFrame", agkLua::GetSpriteCurrentFrame);
		lua_register(luaState, "GetSpriteFrameCount", agkLua::GetSpriteFrameCount);
		lua_register(luaState, "SetSpriteTransparency", agkLua::SetSpriteTransparency);
		lua_register(luaState, "SetSpriteOffset", agkLua::SetSpriteOffset);
		lua_register(luaState, "SetSpriteColor", agkLua::SetSpriteColor);
		lua_register(luaState, "SetSpriteColorRed", agkLua::SetSpriteColorRed);
		lua_register(luaState, "SetSpriteColorGreen", agkLua::SetSpriteColorGreen);
		lua_register(luaState, "SetSpriteColorBlue", agkLua::SetSpriteColorBlue);
		lua_register(luaState, "SetSpriteColorAlpha", agkLua::SetSpriteColorAlpha);
		lua_register(luaState, "SetSpriteUVBorder", agkLua::SetSpriteUVBorder);
		lua_register(luaState, "SetSpriteUVOffset", agkLua::SetSpriteUVOffset);
		lua_register(luaState, "SetSpriteUVScale", agkLua::SetSpriteUVScale);
		lua_register(luaState, "FixSpriteToScreen", agkLua::FixSpriteToScreen);
		lua_register(luaState, "SetSpriteScale", agkLua::SetSpriteScale);
		lua_register(luaState, "SetSpriteScaleByOffset", agkLua::SetSpriteScaleByOffset);
		lua_register(luaState, "SetSpriteScissor", agkLua::SetSpriteScissor);
		lua_register(luaState, "SetSpriteShader", agkLua::SetSpriteShader);
		lua_register(luaState, "SetSpriteGroup", agkLua::SetSpriteGroup);
		lua_register(luaState, "SetSpriteCategoryBits", agkLua::SetSpriteCategoryBits);
		lua_register(luaState, "SetSpriteCategoryBit", agkLua::SetSpriteCategoryBit);
		lua_register(luaState, "SetSpriteCollideBits", agkLua::SetSpriteCollideBits);
		lua_register(luaState, "SetSpriteCollideBit", agkLua::SetSpriteCollideBit);
		lua_register(luaState, "DrawSprite", agkLua::DrawSprite);
		lua_register(luaState, "SetPhysicsScale", agkLua::SetPhysicsScale);
		lua_register(luaState, "SetPhysicsGravity", agkLua::SetPhysicsGravity);
		lua_register(luaState, "SetPhysicsDebugOn", agkLua::SetPhysicsDebugOn);
		lua_register(luaState, "SetPhysicsDebugOff", agkLua::SetPhysicsDebugOff);
		lua_register(luaState, "SetPhysicsThreading", agkLua::SetPhysicsThreading);
		lua_register(luaState, "SetPhysicsCCD", agkLua::SetPhysicsCCD);
		lua_register(luaState, "SetPhysicsSleeping", agkLua::SetPhysicsSleeping);
		lua_register(luaState, "SetPhysicsMaxPolygonPoints", agkLua::SetPhysicsMaxPolygonPoints);
		lua_register(luaState, "GetPhysicsWorld", agkLua::GetPhysicsWorld);
		lua_register(luaState, "GetPhysicsSolveTime", agkLua::GetPhysicsSolveTime);
		lua_register(luaState, "GetPhysicsIslandCount", agkLua::GetPhysicsIslandCount);
		lua_register(luaState, "SetPhysicsWallTop", agkLua::SetPhysicsWallTop);
		lua_register(luaState, "SetPhysicsWallLeft", agkLua::SetPhysicsWallLeft);
		lua_register(luaState, "SetPhysicsWallRight", agkLua::SetPhysicsWallRight);
		lua_register(luaState, "SetPhysicsWallBottom", agkLua::SetPhysicsWallBottom);
		lua_register(luaState, "CreatePhysicsForce", agkLua::CreatePhysicsForce);
		lua_register(luaState, "DeletePhysicsForce", agkLua::DeletePhysicsForce);
		lua_register(luaState, "SetPhysicsForcePosition", agkLua::SetPhysicsForcePosition);
		lua_register(luaState, "SetPhysicsForcePower", agkLua::SetPhysicsForcePower);
		lua_register(luaState, "SetPhysicsForceRange", agkLua::SetPhysicsForceRange);
		lua_register(luaState, "SetSpriteShape", agkLua::SetSpriteShape);
		lua_register(luaState, "SetSpriteShapeBox", agkLua::SetSpriteShapeBox);
		lua_register(luaState, "SetSpriteShapeCircle", agkLua::SetSpriteShapeCircle);
		lua_register(luaState, "SetSpriteShapePolygon", agkLua::SetSpriteShapePolygon);
		lua_register(luaState, "AddSpriteShapeBox", agkLua::AddSpriteShapeBox);
		lua_register(luaState, "AddSpriteShapeCircle", agkLua::AddSpriteShapeCircle);
		lua_register(luaState, "AddSpriteShapePolygon", agkLua::AddSpriteShapePolygon);
		lua_register(luaState, "ClearSpriteShapes", agkLua::ClearSpriteShapes);
		lua_register(luaState, "SetSpritePhysicsCOM", agkLua::SetSpritePhysicsCOM);
		lua_register(luaState, "CalculateSpritePhysicsCOM", agkLua::CalculateSpritePhysicsCOM);
		lua_register(luaState, "SetSpritePhysicsOn", agkLua::SetSpritePhysicsOn);
		lua_register(luaState, "SetSpritePhysicsOff", agkLua::SetSpritePhysicsOff);
		lua_register(luaState, "SetSpritePhysicsDelete", agkLua::SetSpritePhysicsDelete);
		lua_register(luaState, "SetSpritePhysicsFriction", agkLua::SetSpritePhysicsFriction);
		lua_register(luaState, "SetSpritePhysicsRestitution", agkLua::SetSpritePhysicsRestitution);
		lua_register(luaState, "SetSpritePhysicsCanRotate", agkLua::SetSpritePhysicsCanRotate);
		lua_register(luaState, "SetSpritePhysicsVelocity", agkLua::SetSpritePhysicsVelocity);
		lua_register(luaState, "SetSpritePhysicsAngularVelocity", agkLua::SetSpritePhysicsAngularVelocity);
		lua_register(luaState, "SetSpritePhysicsDamping", agkLua::SetSpritePhysicsDamping);
		lua_register(luaState, "SetSpritePhysicsAngularDamping", agkLua::SetSpritePhysicsAngularDamping);
		lua_register(luaState, "SetSpritePhysicsIsBullet", agkLua::SetSpritePhysicsIsBullet);
		lua_register(luaState, "SetSpritePhysicsMass", agkLua::SetSpritePhysicsMass);
		lua_register(luaState, "SetSpritePhysicsIsSensor", agkLua::SetSpritePhysicsIsSensor);
		lua_register(luaState, "SetSpritePhysicsForce", agkLua::SetSpritePhysicsForce);
		lua_register(luaState, "SetSpritePhysicsTorque", agkLua::SetSpritePhysicsTorque);
		lua_register(luaState, "SetSpritePhysicsImpulse", agkLua::SetSpritePhysicsImpulse);
		lua_register(luaState, "SetSpritePhysicsAngularImpulse", agkLua::SetSpritePhysicsAngularImpulse);
		lua_register(luaState, "GetSpritePhysicsVelocityX", agkLua::GetSpritePhysicsVelocityX);
		lua_register(luaState, "GetSpritePhysicsVelocityY", agkLua::GetSpritePhysicsVelocityY);
		lua_register(luaState, "GetSpritePhysicsAngularVelocity", agkLua::GetSpritePhysicsAngularVelocity);
		lua_register(luaState, "GetSpritePhysicsMass", agkLua::GetSpritePhysicsMass);
		lua_register(luaState, "DeleteJoint", agkLua::DeleteJoint);
		lua_register(luaState, "GetJointExists", agkLua::GetJointExists);
		lua_register(luaState, "CreateDistanceJoint", agkLua::CreateDistanceJoint);
		lua_register(luaState, "CreateRevoluteJoint", agkLua::CreateRevoluteJoint);
		lua_register(luaState, "CreatePrismaticJoint", agkLua::CreatePrismaticJoint);
		lua_register(luaState, "CreatePulleyJoint", agkLua::CreatePulleyJoint);
		lua_register(luaState, "CreateMouseJoint", agkLua::CreateMouseJoint);
		lua_register(luaState, "CreateLineJoint", agkLua::CreateLineJoint);
		lua_register(luaState, "CreateWeldJoint", agkLua::CreateWeldJoint);
		lua_register(luaState, "CreateDistanceJoint", agkLua::CreateDistanceJoint);
		lua_register(luaState, "CreateRevoluteJoint", agkLua::CreateRevoluteJoint);
		lua_register(luaState, "CreatePrismaticJoint", agkLua::CreatePrismaticJoint);
		lua_register(luaState, "CreatePulleyJoint", agkLua::CreatePulleyJoint);
		lua_register(luaState, "CreateMouseJoint", agkLua::CreateMouseJoint);
		lua_register(luaState, "CreateLineJoint", agkLua::CreateLineJoint);
		lua_register(luaState, "CreateWeldJoint", agkLua::CreateWeldJoint);
		lua_register(luaState, "CreateGearJoint", agkLua::CreateGearJoint);
		lua_register(luaState, "CreateDistanceJoint", agkLua::CreateDistanceJoint);
		lua_register(luaState, "CreateRevoluteJoint", agkLua::CreateRevoluteJoint);
		lua_register(luaState, "CreatePrismaticJoint", agkLua::CreatePrismaticJoint);
		lua_register(luaState, "CreatePulleyJoint", agkLua::CreatePulleyJoint);
		lua_register(luaState, "CreateMouseJoint", agkLua::CreateMouseJoint);
		lua_register(luaState, "CreateLineJoint", agkLua::CreateLineJoint);
		lua_register(luaState, "CreateWeldJoint", agkLua::CreateWeldJoint);
		lua_register(luaState, "CreateDistanceJoint", agkLua::CreateDistanceJoint);
		lua_register(luaState, "CreateRevoluteJoint", agkLua::CreateRevoluteJoint);
		lua_register(luaState, "CreatePrismaticJoint", agkLua::CreatePrismaticJoint);
		lua_register(luaState, "CreatePulleyJoint", agkLua::CreatePulleyJoint);
		lua_register(luaState, "CreateMouseJoint", agkLua::CreateMouseJoint);
		lua_register(luaState, "CreateLineJoint", agkLua::CreateLineJoint);
		lua_register(luaState, "CreateWeldJoint", agkLua::CreateWeldJoint);
		lua_register(luaState, "CreatePulleyJoint2", agkLua::CreatePulleyJoint2);
		lua_register(luaState, "FinishPulleyJoint", agkLua::FinishPulleyJoint);
		lua_register(luaState, "CreateGearJoint", agkLua::CreateGearJoint);
		lua_register(luaState, "SetJointLimitOn", agkLua::SetJointLimitOn);
		lua_register(luaState, "SetJointLimitOff", agkLua::SetJointLimitOff);
		lua_register(luaState, "SetJointMotorOn", agkLua::SetJointMotorOn);
		lua_register(luaState, "SetJointMotorOff", agkLua::SetJointMotorOff);
		lua_register(luaState, "SetJointMouseTarget", agkLua::SetJointMouseTarget);
		lua_register(luaState, "GetJointReactionForceX", agkLua::GetJointReactionForceX);
		lua_register(luaState, "GetJointReactionForceY", agkLua::GetJointReactionForceY);
		lua_register(luaState, "GetJointReactionTorque", agkLua::GetJointReactionTorque);
		lua_register(luaState, "PhysicsRayCast", agkLua::PhysicsRayCast);
		lua_register(luaState, "PhysicsRayCastGroup", agkLua::PhysicsRayCastGroup);
		lua_register(luaState, "PhysicsRayCastCategory", agkLua::PhysicsRayCastCategory);
		lua_register(luaState, "SpriteRayCast", agkLua::SpriteRayCast);
		lua_register(luaState, "SpriteRayCastGroup", agkLua::SpriteRayCastGroup);
		lua_register(luaState, "SpriteRayCastCategory", agkLua::SpriteRayCastCategory);
		lua_register(luaState, "SpriteRayCastSingle", agkLua::SpriteRayCastSingle);
		lua_register(luaState, "SpriteRayCastSingle", agkLua::SpriteRayCastSingle);
		lua_register(luaState, "GetRayCastSpriteID", agkLua::GetRayCastSpriteID);
		lua_register(luaState, "GetRayCastSprite", agkLua::GetRayCastSprite);
		lua_register(luaState, "GetRayCastX", agkLua::GetRayCastX);
		lua_register(luaState, "GetRayCastY", agkLua::GetRayCastY);
		lua_register(luaState, "GetRayCastNormalX", agkLua::GetRayCastNormalX);
		lua_register(luaState, "GetRayCastNormalY", agkLua::GetRayCastNormalY);
		lua_register(luaState, "GetRayCastFraction", agkLua::GetRayCastFraction);
		lua_register(luaState, "GetSpriteInBox", agkLua::GetSpriteInBox);
		lua_register(luaState, "GetSpriteInCircle", agkLua::GetSpriteInCircle);
		lua_register(luaState, "GetSpriteCollision", agkLua::GetSpriteCollision);
		lua_register(luaState, "GetSpriteHit", agkLua::GetSpriteHit);
		lua_register(luaState, "GetSpriteHitGroup", agkLua::GetSpriteHitGroup);
		lua_register(luaState, "GetSpriteHitCategory", agkLua::GetSpriteHitCategory);
		lua_register(luaState, "GetSpriteDistance", agkLua::GetSpriteDistance);
		lua_register(luaState, "GetSpriteDistancePoint1X", agkLua::GetSpriteDistancePoint1X);
		lua_register(luaState, "GetSpriteDistancePoint1Y", agkLua::GetSpriteDistancePoint1Y);
		lua_register(luaState, "GetSpriteDistancePoint2X", agkLua::GetSpriteDistancePoint2X);
		lua_register(luaState, "GetSpriteDistancePoint2Y", agkLua::GetSpriteDistancePoint2Y);
		lua_register(luaState, "GetFirstContact", agkLua::GetFirstContact);
		lua_register(luaState, "GetNextContact", agkLua::GetNextContact);
		lua_register(luaState, "GetContactWorldX", agkLua::GetContactWorldX);
		lua_register(luaState, "GetContactWorldY", agkLua::GetContactWorldY);
		lua_register(luaState, "GetContactSpriteID1", agkLua::GetContactSpriteID1);
		lua_register(luaState, "GetContactSpriteID2", agkLua::GetContactSpriteID2);
		lua_register(luaState, "GetContactSprite1", agkLua::GetContactSprite1);
		lua_register(luaState, "GetContactSprite2", agkLua::GetContactSprite2);
		lua_register(luaState, "GetSpriteFirstContact", agkLua::GetSpriteFirstContact);
		lua_register(luaState, "GetSpriteNextContact", agkLua::GetSpriteNextContact);
		lua_register(luaState, "GetSpriteContactWorldX", agkLua::GetSpriteContactWorldX);
		lua_register(luaState, "GetSpriteContactWorldY", agkLua::GetSpriteContactWorldY);
		lua_register(luaState, "GetSpriteContactSpriteID2", agkLua::GetSpriteContactSpriteID2);
		lua_register(luaState, "GetSpriteContactSprite2", agkLua::GetSpriteContactSprite2);
		lua_register(luaState, "GetPhysicsCollision", agkLua::GetPhysicsCollision);
		lua_register(luaState, "GetPhysicsCollisionX", agkLua::GetPhysicsCollisionX);
		lua_register(luaState, "GetPhysicsCollisionY", agkLua::GetPhysicsCollisionY);
		lua_register(luaState, "GetPhysicsCollisionWorldX", agkLua::GetPhysicsCollisionWorldX);
		lua_register(luaState, "GetPhysicsCollisionWorldY", agkLua::GetPhysicsCollisionWorldY);
		lua_register(luaState, "CreateParticles", agkLua::CreateParticles);
		lua_register(luaState, "CreateParticles", agkLua::CreateParticles);
		lua_register(luaState, "GetParticlesExists", agkLua::GetParticlesExists);
		lua_register(luaState, "DeleteParticles", agkLua::DeleteParticles);
		lua_register(luaState, "SetParticlesPosition", agkLua::SetParticlesPosition);
		lua_register(luaState, "SetParticlesDepth", agkLua::SetParticlesDepth);
		lua_register(luaState, "SetParticlesFrequency", agkLua::SetParticlesFrequency);
		lua_register(luaState, "SetParticlesStartZone", agkLua::SetParticlesStartZone);
		lua_register(luaState, "SetParticlesDirection", agkLua::SetParticlesDirection);
		lua_register(luaState, "SetParticlesVelocityRange", agkLua::SetParticlesVelocityRange);
		lua_register(luaState, "SetParticlesAngle", agkLua::SetParticlesAngle);
		lua_register(luaState, "SetParticlesAngleRad", agkLua::SetParticlesAngleRad);
		lua_register(luaState, "SetParticlesRotationRange", agkLua::SetParticlesRotationRange);
		lua_register(luaState, "SetParticlesRotationRangeRad", agkLua::SetParticlesRotationRangeRad);
		lua_register(luaState, "SetParticlesFaceDirection", agkLua::SetParticlesFaceDirection);
		lua_register(luaState, "SetParticlesSize", agkLua::SetParticlesSize);
		lua_register(luaState, "SetParticlesLife", agkLua::SetParticlesLife);
		lua_register(luaState, "SetParticlesMax", agkLua::SetParticlesMax);
		lua_register(luaState, "ResetParticleCount", agkLua::ResetParticleCount);
		lua_register(luaState, "SetParticlesImage", agkLua::SetParticlesImage);
		lua_register(luaState, "SetParticlesColorInterpolation", agkLua::SetParticlesColorInterpolation);
		lua_register(luaState, "SetParticlesVisible", agkLua::SetParticlesVisible);
		lua_register(luaState, "SetParticlesActive", agkLua::SetParticlesActive);
		lua_register(luaState, "SetParticlesTransparency", agkLua::SetParticlesTransparency);
		lua_register(luaState, "GetParticlesX", agkLua::GetParticlesX);
		lua_register(luaState, "GetParticlesY", agkLua::GetParticlesY);
		lua_register(luaState, "GetParticlesDepth", agkLua::GetParticlesDepth);
		lua_register(luaState, "GetParticlesVisible", agkLua::GetParticlesVisible);
		lua_register(luaState, "GetParticlesActive", agkLua::GetParticlesActive);
		lua_register(luaState, "GetParticlesFrequency", agkLua::GetParticlesFrequency);
		lua_register(luaState, "GetParticlesDirectionX", agkLua::GetParticlesDirectionX);
		lua_register(luaState, "GetParticlesDirectionY", agkLua::GetParticlesDirectionY);
		lua_register(luaState, "GetParticlesAngle", agkLua::GetParticlesAngle);
		lua_register(luaState, "GetParticlesAngleRad", agkLua::GetParticlesAngleRad);
		lua_register(luaState, "GetParticlesSize", agkLua::GetParticlesSize);
		lua_register(luaState, "GetParticlesLife", agkLua::GetParticlesLife);
		lua_register(luaState, "GetParticlesMaxReached", agkLua::GetParticlesMaxReached);
		lua_register(luaState, "AddParticlesForce", agkLua::AddParticlesForce);
		lua_register(luaState, "ClearParticlesForces", agkLua::ClearParticlesForces);
		lua_register(luaState, "AddParticlesColorKeyFrame", agkLua::AddParticlesColorKeyFrame);
		lua_register(luaState, "ClearParticlesColors", agkLua::ClearParticlesColors);
		lua_register(luaState, "AddParticlesScaleKeyFrame", agkLua::AddParticlesScaleKeyFrame);
		lua_register(luaState, "ClearParticlesScales", agkLua::ClearParticlesScales);
		lua_register(luaState, "FixParticlesToScreen", agkLua::FixParticlesToScreen);
		lua_register(luaState, "UpdateParticles", agkLua::UpdateParticles);
		lua_register(luaState, "OffsetParticles", agkLua::OffsetParticles);
		lua_register(luaState, "SetTextDefaultFontImage", agkLua::SetTextDefaultFontImage);
		lua_register(luaState, "SetTextDefaultExtendedFontImage", agkLua::SetTextDefaultExtendedFontImage);
		lua_register(luaState, "SetTextDefaultMinFilter", agkLua::SetTextDefaultMinFilter);
		lua_register(luaState, "SetTextDefaultMagFilter", agkLua::SetTextDefaultMagFilter);
		lua_register(luaState, "CreateText", agkLua::CreateText);
		lua_register(luaState, "CreateText", agkLua::CreateText);
		lua_register(luaState, "DeleteText", agkLua::DeleteText);
		lua_register(luaState, "DeleteAllText", agkLua::DeleteAllText);
		lua_register(luaState, "SetTextString", agkLua::SetTextString);
		lua_register(luaState, "SetTextPosition", agkLua::SetTextPosition);
		lua_register(luaState, "SetTextX", agkLua::SetTextX);
		lua_register(luaState, "SetTextY", agkLua::SetTextY);
		lua_register(luaState, "SetTextSize", agkLua::SetTextSize);
		lua_register(luaState, "SetTextSpacing", agkLua::SetTextSpacing);
		lua_register(luaState, "SetTextLineSpacing", agkLua::SetTextLineSpacing);
		lua_register(luaState, "SetTextDepth", agkLua::SetTextDepth);
		lua_register(luaState, "SetTextVisible", agkLua::SetTextVisible);
		lua_register(luaState, "SetTextAlignment", agkLua::SetTextAlignment);
		lua_register(luaState, "SetTextColor", agkLua::SetTextColor);
		lua_register(luaState, "SetTextColorRed", agkLua::SetTextColorRed);
		lua_register(luaState, "SetTextColorGreen", agkLua::SetTextColorGreen);
		lua_register(luaState, "SetTextColorBlue", agkLua::SetTextColorBlue);
		lua_register(luaState, "SetTextColorAlpha", agkLua::SetTextColorAlpha);
		lua_register(luaState, "SetTextFontImage", agkLua::SetTextFontImage);
		lua_register(luaState, "SetTextExtendedFontImage", agkLua::SetTextExtendedFontImage);
		lua_register(luaState, "FixTextToScreen", agkLua::FixTextToScreen);
		lua_register(luaState, "SetTextMaxWidth", agkLua::SetTextMaxWidth);
		lua_register(luaState, "SetTextScissor", agkLua::SetTextScissor);
		lua_register(luaState, "SetTextTransparency", agkLua::SetTextTransparency);
		lua_register(luaState, "GetTextColorRed", agkLua::GetTextColorRed);
		lua_register(luaState, "GetTextColorGreen", agkLua::GetTextColorGreen);
		lua_register(luaState, "GetTextColorBlue", agkLua::GetTextColorBlue);
		lua_register(luaState, "GetTextColorAlpha", agkLua::GetTextColorAlpha);
		lua_register(luaState, "GetTextExists", agkLua::GetTextExists);
		lua_register(luaState, "GetTextX", agkLua::GetTextX);
		lua_register(luaState, "GetTextY", agkLua::GetTextY);
		lua_register(luaState, "GetTextLength", agkLua::GetTextLength);
		lua_register(luaState, "GetTextTotalWidth", agkLua::GetTextTotalWidth);
		lua_register(luaState, "GetTextTotalHeight", agkLua::GetTextTotalHeight);
		lua_register(luaState, "GetTextHitTest", agkLua::GetTextHitTest);
		lua_register(luaState, "GetTextVisible", agkLua::GetTextVisible);
		lua_register(luaState, "GetTextDepth", agkLua::GetTextDepth);
		lua_register(luaState, "GetTextSize", agkLua::GetTextSize);
		lua_register(luaState, "GetTextString", agkLua::GetTextString);
		lua_register(luaState, "GetTextSpacing", agkLua::GetTextSpacing);
		lua_register(luaState, "GetTextLineSpacing", agkLua::GetTextLineSpacing);
		lua_register(luaState, "SetTextCharPosition", agkLua::SetTextCharPosition);
		lua_register(luaState, "SetTextCharX", agkLua::SetTextCharX);
		lua_register(luaState, "SetTextCharY", agkLua::SetTextCharY);
		lua_register(luaState, "SetTextCharAngle", agkLua::SetTextCharAngle);
		lua_register(luaState, "SetTextCharAngleRad", agkLua::SetTextCharAngleRad);
		lua_register(luaState, "SetTextCharColor", agkLua::SetTextCharColor);
		lua_register(luaState, "SetTextCharColorRed", agkLua::SetTextCharColorRed);
		lua_register(luaState, "SetTextCharColorGreen", agkLua::SetTextCharColorGreen);
		lua_register(luaState, "SetTextCharColorBlue", agkLua::SetTextCharColorBlue);
		lua_register(luaState, "SetTextCharColorAlpha", agkLua::SetTextCharColorAlpha);
		lua_register(luaState, "GetTextCharX", agkLua::GetTextCharX);
		lua_register(luaState, "GetTextCharY", agkLua::GetTextCharY);
		lua_register(luaState, "GetTextCharAngle", agkLua::GetTextCharAngle);
		lua_register(luaState, "GetTextCharAngleRad", agkLua::GetTextCharAngleRad);
		lua_register(luaState, "GetTextCharColorRed", agkLua::GetTextCharColorRed);
		lua_register(luaState, "GetTextCharColorGreen", agkLua::GetTextCharColorGreen);
		lua_register(luaState, "GetTextCharColorBlue", agkLua::GetTextCharColorBlue);
		lua_register(luaState, "GetTextCharColorAlpha", agkLua::GetTextCharColorAlpha);
		lua_register(luaState, "CreateSkeleton2D", agkLua::CreateSkeleton2D);
		lua_register(luaState, "CreateSkeleton2D", agkLua::CreateSkeleton2D);
		lua_register(luaState, "GetSkeleton2DExists", agkLua::GetSkeleton2DExists);
		lua_register(luaState, "DeleteSkeleton2D", agkLua::DeleteSkeleton2D);
		lua_register(luaState, "LoadSkeleton2DFromSpineFile", agkLua::LoadSkeleton2DFromSpineFile);
		lua_register(luaState, "LoadSkeleton2DFromSpineFile", agkLua::LoadSkeleton2DFromSpineFile);
		lua_register(luaState, "LoadSkeleton2DFromSpriterFile", agkLua::LoadSkeleton2DFromSpriterFile);
		lua_register(luaState, "LoadSkeleton2DFromSpriterFile", agkLua::LoadSkeleton2DFromSpriterFile);
		lua_register(luaState, "SetSkeleton2DPosition", agkLua::SetSkeleton2DPosition);
		lua_register(luaState, "SetSkeleton2DRotation", agkLua::SetSkeleton2DRotation);
		lua_register(luaState, "SetSkeleton2DFlip", agkLua::SetSkeleton2DFlip);
		lua_register(luaState, "SetSkeleton2DDepth", agkLua::SetSkeleton2DDepth);
		lua_register(luaState, "FixSkeleton2DToScreen", agkLua::FixSkeleton2DToScreen);
		lua_register(luaState, "GetSkeleton2DX", agkLua::GetSkeleton2DX);
		lua_register(luaState, "GetSkeleton2DY", agkLua::GetSkeleton2DY);
		lua_register(luaState, "GetSkeleton2DAngle", agkLua::GetSkeleton2DAngle);
		lua_register(luaState, "GetSkeleton2DBone", agkLua::GetSkeleton2DBone);
		lua_register(luaState, "GetSkeleton2DBoneParent", agkLua::GetSkeleton2DBoneParent);
		lua_register(luaState, "GetSkeleton2DBoneX", agkLua::GetSkeleton2DBoneX);
		lua_register(luaState, "GetSkeleton2DBoneY", agkLua::GetSkeleton2DBoneY);
		lua_register(luaState, "GetSkeleton2DBoneAngle", agkLua::GetSkeleton2DBoneAngle);
		lua_register(luaState, "GetSkeleton2DBoneCurrX", agkLua::GetSkeleton2DBoneCurrX);
		lua_register(luaState, "GetSkeleton2DBoneCurrY", agkLua::GetSkeleton2DBoneCurrY);
		lua_register(luaState, "GetSkeleton2DBoneCurrAngle", agkLua::GetSkeleton2DBoneCurrAngle);
		lua_register(luaState, "SetSkeleton2DBonePosition", agkLua::SetSkeleton2DBonePosition);
		lua_register(luaState, "SetSkeleton2DBoneAngle", agkLua::SetSkeleton2DBoneAngle);
		lua_register(luaState, "SetSkeleton2DBoneScale", agkLua::SetSkeleton2DBoneScale);
		lua_register(luaState, "SetSkeleton2DBoneMode", agkLua::SetSkeleton2DBoneMode);
		lua_register(luaState, "PlaySkeleton2DAnimation", agkLua::PlaySkeleton2DAnimation);
		lua_register(luaState, "SetSkeleton2DAnimationFrame", agkLua::SetSkeleton2DAnimationFrame);
		lua_register(luaState, "SetSkeleton2DAnimationSpeed", agkLua::SetSkeleton2DAnimationSpeed);
		lua_register(luaState, "GetSkeleton2DCurrentTime", agkLua::GetSkeleton2DCurrentTime);
		lua_register(luaState, "StopSkeleton2DAnimation", agkLua::StopSkeleton2DAnimation);
		lua_register(luaState, "GetSkeleton2DIsAnimating", agkLua::GetSkeleton2DIsAnimating);
		lua_register(luaState, "GetSkeleton2DIsTweening", agkLua::GetSkeleton2DIsTweening);
		lua_register(luaState, "GetSkeleton2DAnimationTime", agkLua::GetSkeleton2DAnimationTime);
		lua_register(luaState, "DeleteTween", agkLua::DeleteTween);
		lua_register(luaState, "GetTweenExists", agkLua::GetTweenExists);
		lua_register(luaState, "TweenLinear", agkLua::TweenLinear);
		lua_register(luaState, "TweenSmooth1", agkLua::TweenSmooth1);
		lua_register(luaState, "TweenSmooth2", agkLua::TweenSmooth2);
		lua_register(luaState, "TweenEaseIn1", agkLua::TweenEaseIn1);
		lua_register(luaState, "TweenEaseIn2", agkLua::TweenEaseIn2);
		lua_register(luaState, "TweenEaseOut1", agkLua::TweenEaseOut1);
		lua_register(luaState, "TweenEaseOut2", agkLua::TweenEaseOut2);
		lua_register(luaState, "TweenBounce", agkLua::TweenBounce);
		lua_register(luaState, "TweenOvershoot", agkLua::TweenOvershoot);
		lua_register(luaState, "CreateTweenSprite", agkLua::CreateTweenSprite);
		lua_register(luaState, "CreateTweenSprite", agkLua::CreateTweenSprite);
		lua_register(luaState, "GetTweenSpriteExists", agkLua::GetTweenSpriteExists);
		lua_register(luaState, "SetTweenSpriteX", agkLua::SetTweenSpriteX);
		lua_register(luaState, "SetTweenSpriteY", agkLua::SetTweenSpriteY);
		lua_register(luaState, "SetTweenSpriteAngle", agkLua::SetTweenSpriteAngle);
		lua_register(luaState, "SetTweenSpriteSizeX", agkLua::SetTweenSpriteSizeX);
		lua_register(luaState, "SetTweenSpriteSizeY", agkLua::SetTweenSpriteSizeY);
		lua_register(luaState, "SetTweenSpriteRed", agkLua::SetTweenSpriteRed);
		lua_register(luaState, "SetTweenSpriteGreen", agkLua::SetTweenSpriteGreen);
		lua_register(luaState, "SetTweenSpriteBlue", agkLua::SetTweenSpriteBlue);
		lua_register(luaState, "SetTweenSpriteAlpha", agkLua::SetTweenSpriteAlpha);
		lua_register(luaState, "PlayTweenSprite", agkLua::PlayTweenSprite);
		lua_register(luaState, "StopTweenSprite", agkLua::StopTweenSprite);
		lua_register(luaState, "GetTweenSpritePlaying", agkLua::GetTweenSpritePlaying);
		lua_register(luaState, "CreateTweenText", agkLua::CreateTweenText);
		lua_register(luaState, "CreateTweenText", agkLua::CreateTweenText);
		lua_register(luaState, "GetTweenTextExists", agkLua::GetTweenTextExists);
		lua_register(luaState, "SetTweenTextX", agkLua::SetTweenTextX);
		lua_register(luaState, "SetTweenTextY", agkLua::SetTweenTextY);
		lua_register(luaState, "SetTweenTextAngle", agkLua::SetTweenTextAngle);
		lua_register(luaState, "SetTweenTextSize", agkLua::SetTweenTextSize);
		lua_register(luaState, "SetTweenTextSpacing", agkLua::SetTweenTextSpacing);
		lua_register(luaState, "SetTweenTextLineSpacing", agkLua::SetTweenTextLineSpacing);
		lua_register(luaState, "SetTweenTextRed", agkLua::SetTweenTextRed);
		lua_register(luaState, "SetTweenTextGreen", agkLua::SetTweenTextGreen);
		lua_register(luaState, "SetTweenTextBlue", agkLua::SetTweenTextBlue);
		lua_register(luaState, "SetTweenTextAlpha", agkLua::SetTweenTextAlpha);
		lua_register(luaState, "PlayTweenText", agkLua::PlayTweenText);
		lua_register(luaState, "StopTweenText", agkLua::StopTweenText);
		lua_register(luaState, "GetTweenTextPlaying", agkLua::GetTweenTextPlaying);
		lua_register(luaState, "CreateTweenChar", agkLua::CreateTweenChar);
		lua_register(luaState, "CreateTweenChar", agkLua::CreateTweenChar);
		lua_register(luaState, "GetTweenCharExists", agkLua::GetTweenCharExists);
		lua_register(luaState, "SetTweenCharX", agkLua::SetTweenCharX);
		lua_register(luaState, "SetTweenCharY", agkLua::SetTweenCharY);
		lua_register(luaState, "SetTweenCharAngle", agkLua::SetTweenCharAngle);
		lua_register(luaState, "SetTweenCharRed", agkLua::SetTweenCharRed);
		lua_register(luaState, "SetTweenCharGreen", agkLua::SetTweenCharGreen);
		lua_register(luaState, "SetTweenCharBlue", agkLua::SetTweenCharBlue);
		lua_register(luaState, "SetTweenCharAlpha", agkLua::SetTweenCharAlpha);
		lua_register(luaState, "PlayTweenChar", agkLua::PlayTweenChar);
		lua_register(luaState, "StopTweenChar", agkLua::StopTweenChar);
		lua_register(luaState, "GetTweenCharPlaying", agkLua::GetTweenCharPlaying);
		lua_register(luaState, "CreateTweenObject", agkLua::CreateTweenObject);
		lua_register(luaState, "CreateTweenObject", agkLua::CreateTweenObject);
		lua_register(luaState, "GetTweenObjectExists", agkLua::GetTweenObjectExists);
		lua_register(luaState, "SetTweenObjectX", agkLua::SetTweenObjectX);
		lua_register(luaState, "SetTweenObjectY", agkLua::SetTweenObjectY);
		lua_register(luaState, "SetTweenObjectZ", agkLua::SetTweenObjectZ);
		lua_register(luaState, "SetTweenObjectAngleX", agkLua::SetTweenObjectAngleX);
		lua_register(luaState, "SetTweenObjectAngleY", agkLua::SetTweenObjectAngleY);
		lua_register(luaState, "SetTweenObjectAngleZ", agkLua::SetTweenObjectAngleZ);
		lua_register(luaState, "SetTweenObjectScaleX", agkLua::SetTweenObjectScaleX);
		lua_register(luaState, "SetTweenObjectScaleY", agkLua::SetTweenObjectScaleY);
		lua_register(luaState, "SetTweenObjectScaleZ", agkLua::SetTweenObjectScaleZ);
		lua_register(luaState, "SetTweenObjectRed", agkLua::SetTweenObjectRed);
		lua_register(luaState, "SetTweenObjectGreen", agkLua::SetTweenObjectGreen);
		lua_register(luaState, "SetTweenObjectBlue", agkLua::SetTweenObjectBlue);
		lua_register(luaState, "SetTweenObjectAlpha", agkLua::SetTweenObjectAlpha);
		lua_register(luaState, "PlayTweenObject", agkLua::PlayTweenObject);
		lua_register(luaState, "StopTweenObject", agkLua::StopTweenObject);
		lua_register(luaState, "GetTweenObjectPlaying", agkLua::GetTweenObjectPlaying);
		lua_register(luaState, "CreateTweenCamera", agkLua::CreateTweenCamera);
		lua_register(luaState, "CreateTweenCamera", agkLua::CreateTweenCamera);
		lua_register(luaState, "GetTweenCameraExists", agkLua::GetTweenCameraExists);
		lua_register(luaState, "SetTweenCameraX", agkLua::SetTweenCameraX);
		lua_register(luaState, "SetTweenCameraY", agkLua::SetTweenCameraY);
		lua_register(luaState, "SetTweenCameraZ", agkLua::SetTweenCameraZ);
		lua_register(luaState, "SetTweenCameraAngleX", agkLua::SetTweenCameraAngleX);
		lua_register(luaState, "SetTweenCameraAngleY", agkLua::SetTweenCameraAngleY);
		lua_register(luaState, "SetTweenCameraAngleZ", agkLua::SetTweenCameraAngleZ);
		lua_register(luaState, "SetTweenCameraFOV", agkLua::SetTweenCameraFOV);
		lua_register(luaState, "PlayTweenCamera", agkLua::PlayTweenCamera);
		lua_register(luaState, "StopTweenCamera", agkLua::StopTweenCamera);
		lua_register(luaState, "GetTweenCameraPlaying", agkLua::GetTweenCameraPlaying);
		lua_register(luaState, "CreateTweenChain", agkLua::CreateTweenChain);
		lua_register(luaState, "CreateTweenChain", agkLua::CreateTweenChain);
		lua_register(luaState, "DeleteTweenChain", agkLua::DeleteTweenChain);
		lua_register(luaState, "ClearTweenChain", agkLua::ClearTweenChain);
		lua_register(luaState, "AddTweenChainSprite", agkLua::AddTweenChainSprite);
		lua_register(luaState, "AddTweenChainText", agkLua::AddTweenChainText);
		lua_register(luaState, "AddTweenChainChar", agkLua::AddTweenChainChar);
		lua_register(luaState, "AddTweenChainObject", agkLua::AddTweenChainObject);
		lua_register(luaState, "AddTweenChainCamera", agkLua::AddTweenChainCamera);
		lua_register(luaState, "PlayTweenChain", agkLua::PlayTweenChain);
		lua_register(luaState, "PauseTweenChain", agkLua::PauseTweenChain);
		lua_register(luaState, "StopTweenChain", agkLua::StopTweenChain);
		lua_register(luaState, "GetTweenChainPlaying", agkLua::GetTweenChainPlaying);
		lua_register(luaState, "SetTweenChainTime", agkLua::SetTweenChainTime);
		lua_register(luaState, "GetTweenChainEndTime", agkLua::GetTweenChainEndTime);
		lua_register(luaState, "UpdateAllTweens", agkLua::UpdateAllTweens);
		lua_register(luaState, "UpdateTweenChain", agkLua::UpdateTweenChain);
		lua_register(luaState, "Print", agkLua::Print);
		lua_register(luaState, "Print", agkLua::Print);
		lua_register(luaState, "Print", agkLua::Print);
		lua_register(luaState, "Print", agkLua::Print);
		lua_register(luaState, "Print", agkLua::Print);
		lua_register(luaState, "PrintC", agkLua::PrintC);
		lua_register(luaState, "PrintC", agkLua::PrintC);
		lua_register(luaState, "PrintC", agkLua::PrintC);
		lua_register(luaState, "PrintC", agkLua::PrintC);
		lua_register(luaState, "PrintC", agkLua::PrintC);
		lua_register(luaState, "SetPrintSize", agkLua::SetPrintSize);
		lua_register(luaState, "GetPrintSize", agkLua::GetPrintSize);
		lua_register(luaState, "SetPrintSpacing", agkLua::SetPrintSpacing);
		lua_register(luaState, "SetPrintColor", agkLua::SetPrintColor);
		lua_register(luaState, "SetPrintColor", agkLua::SetPrintColor);
		lua_register(luaState, "GetMultiTouchExists", agkLua::GetMultiTouchExists);
		lua_register(luaState, "GetMouseExists", agkLua::GetMouseExists);
		lua_register(luaState, "GetKeyboardExists", agkLua::GetKeyboardExists);
		lua_register(luaState, "GetJoystickExists", agkLua::GetJoystickExists);
		lua_register(luaState, "GetCameraExists", agkLua::GetCameraExists);
		lua_register(luaState, "GetAccelerometerExists", agkLua::GetAccelerometerExists);
		lua_register(luaState, "GetGyroSensorExists", agkLua::GetGyroSensorExists);
		lua_register(luaState, "GetProximitySensorExists", agkLua::GetProximitySensorExists);
		lua_register(luaState, "GetLightSensorExists", agkLua::GetLightSensorExists);
		lua_register(luaState, "GetMagneticSensorExists", agkLua::GetMagneticSensorExists);
		lua_register(luaState, "GetRotationVectorSensorExists", agkLua::GetRotationVectorSensorExists);
		lua_register(luaState, "GetGPSSensorExists", agkLua::GetGPSSensorExists);
		lua_register(luaState, "GetRawTouchCount", agkLua::GetRawTouchCount);
		lua_register(luaState, "GetRawFirstTouchEvent", agkLua::GetRawFirstTouchEvent);
		lua_register(luaState, "GetRawNextTouchEvent", agkLua::GetRawNextTouchEvent);
		lua_register(luaState, "GetRawTouchType", agkLua::GetRawTouchType);
		lua_register(luaState, "GetRawTouchStartX", agkLua::GetRawTouchStartX);
		lua_register(luaState, "GetRawTouchStartY", agkLua::GetRawTouchStartY);
		lua_register(luaState, "GetRawTouchCurrentX", agkLua::GetRawTouchCurrentX);
		lua_register(luaState, "GetRawTouchCurrentY", agkLua::GetRawTouchCurrentY);
		lua_register(luaState, "GetRawTouchLastX", agkLua::GetRawTouchLastX);
		lua_register(luaState, "GetRawTouchLastY", agkLua::GetRawTouchLastY);
		lua_register(luaState, "GetRawTouchReleased", agkLua::GetRawTouchReleased);
		lua_register(luaState, "SetRawTouchValue", agkLua::SetRawTouchValue);
		lua_register(luaState, "GetRawTouchValue", agkLua::GetRawTouchValue);
		lua_register(luaState, "GetRawTouchTime", agkLua::GetRawTouchTime);
		lua_register(luaState, "GetRawMouseX", agkLua::GetRawMouseX);
		lua_register(luaState, "GetRawMouseY", agkLua::GetRawMouseY);
		lua_register(luaState, "GetRawMouseWheel", agkLua::GetRawMouseWheel);
		lua_register(luaState, "GetRawMouseWheelDelta", agkLua::GetRawMouseWheelDelta);
		lua_register(luaState, "GetRawMouseLeftPressed", agkLua::GetRawMouseLeftPressed);
		lua_register(luaState, "GetRawMouseLeftState", agkLua::GetRawMouseLeftState);
		lua_register(luaState, "GetRawMouseLeftReleased", agkLua::GetRawMouseLeftReleased);
		lua_register(luaState, "GetRawMouseRightPressed", agkLua::GetRawMouseRightPressed);
		lua_register(luaState, "GetRawMouseRightState", agkLua::GetRawMouseRightState);
		lua_register(luaState, "GetRawMouseRightReleased", agkLua::GetRawMouseRightReleased);
		lua_register(luaState, "GetRawMouseMiddlePressed", agkLua::GetRawMouseMiddlePressed);
		lua_register(luaState, "GetRawMouseMiddleState", agkLua::GetRawMouseMiddleState);
		lua_register(luaState, "GetRawMouseMiddleReleased", agkLua::GetRawMouseMiddleReleased);
		lua_register(luaState, "SetRawMouseVisible", agkLua::SetRawMouseVisible);
		lua_register(luaState, "SetRawMousePosition", agkLua::SetRawMousePosition);
		lua_register(luaState, "FixOrientationByDefault", agkLua::FixOrientationByDefault);
		lua_register(luaState, "GetRawAccelX", agkLua::GetRawAccelX);
		lua_register(luaState, "GetRawAccelY", agkLua::GetRawAccelY);
		lua_register(luaState, "GetRawAccelZ", agkLua::GetRawAccelZ);
		lua_register(luaState, "GetRawGyroVelocityX", agkLua::GetRawGyroVelocityX);
		lua_register(luaState, "GetRawGyroVelocityY", agkLua::GetRawGyroVelocityY);
		lua_register(luaState, "GetRawGyroVelocityZ", agkLua::GetRawGyroVelocityZ);
		lua_register(luaState, "GetRawProximityDistance", agkLua::GetRawProximityDistance);
		lua_register(luaState, "GetRawLightLevel", agkLua::GetRawLightLevel);
		lua_register(luaState, "GetRawMagneticX", agkLua::GetRawMagneticX);
		lua_register(luaState, "GetRawMagneticY", agkLua::GetRawMagneticY);
		lua_register(luaState, "GetRawMagneticZ", agkLua::GetRawMagneticZ);
		lua_register(luaState, "GetRawRotationVectorX", agkLua::GetRawRotationVectorX);
		lua_register(luaState, "GetRawRotationVectorY", agkLua::GetRawRotationVectorY);
		lua_register(luaState, "GetRawRotationVectorZ", agkLua::GetRawRotationVectorZ);
		lua_register(luaState, "GetRawRotationVectorW", agkLua::GetRawRotationVectorW);
		lua_register(luaState, "GetRawRotationVectorX2", agkLua::GetRawRotationVectorX2);
		lua_register(luaState, "GetRawRotationVectorY2", agkLua::GetRawRotationVectorY2);
		lua_register(luaState, "GetRawRotationVectorZ2", agkLua::GetRawRotationVectorZ2);
		lua_register(luaState, "GetRawRotationVectorW2", agkLua::GetRawRotationVectorW2);
		lua_register(luaState, "StartGPSTracking", agkLua::StartGPSTracking);
		lua_register(luaState, "StopGPSTracking", agkLua::StopGPSTracking);
		lua_register(luaState, "GetRawGPSLatitude", agkLua::GetRawGPSLatitude);
		lua_register(luaState, "GetRawGPSLongitude", agkLua::GetRawGPSLongitude);
		lua_register(luaState, "GetRawGPSAltitude", agkLua::GetRawGPSAltitude);
		lua_register(luaState, "CompleteRawJoystickDetection", agkLua::CompleteRawJoystickDetection);
		lua_register(luaState, "GetRawJoystickExists", agkLua::GetRawJoystickExists);
		lua_register(luaState, "GetRawJoystickConnected", agkLua::GetRawJoystickConnected);
		lua_register(luaState, "GetRawJoystickX", agkLua::GetRawJoystickX);
		lua_register(luaState, "GetRawJoystickY", agkLua::GetRawJoystickY);
		lua_register(luaState, "GetRawJoystickZ", agkLua::GetRawJoystickZ);
		lua_register(luaState, "GetRawJoystickRX", agkLua::GetRawJoystickRX);
		lua_register(luaState, "GetRawJoystickRY", agkLua::GetRawJoystickRY);
		lua_register(luaState, "GetRawJoystickRZ", agkLua::GetRawJoystickRZ);
		lua_register(luaState, "GetRawJoystickButtonPressed", agkLua::GetRawJoystickButtonPressed);
		lua_register(luaState, "GetRawJoystickButtonState", agkLua::GetRawJoystickButtonState);
		lua_register(luaState, "GetRawJoystickButtonReleased", agkLua::GetRawJoystickButtonReleased);
		lua_register(luaState, "SetRawJoystickDeadZone", agkLua::SetRawJoystickDeadZone);
		lua_register(luaState, "AddVirtualJoystick", agkLua::AddVirtualJoystick);
		lua_register(luaState, "DeleteVirtualJoystick", agkLua::DeleteVirtualJoystick);
		lua_register(luaState, "GetVirtualJoystickExists", agkLua::GetVirtualJoystickExists);
		lua_register(luaState, "GetVirtualJoystickX", agkLua::GetVirtualJoystickX);
		lua_register(luaState, "GetVirtualJoystickY", agkLua::GetVirtualJoystickY);
		lua_register(luaState, "SetVirtualJoystickAlpha", agkLua::SetVirtualJoystickAlpha);
		lua_register(luaState, "SetVirtualJoystickPosition", agkLua::SetVirtualJoystickPosition);
		lua_register(luaState, "SetVirtualJoystickSize", agkLua::SetVirtualJoystickSize);
		lua_register(luaState, "SetVirtualJoystickActive", agkLua::SetVirtualJoystickActive);
		lua_register(luaState, "SetVirtualJoystickVisible", agkLua::SetVirtualJoystickVisible);
		lua_register(luaState, "SetVirtualJoystickImageInner", agkLua::SetVirtualJoystickImageInner);
		lua_register(luaState, "SetVirtualJoystickImageOuter", agkLua::SetVirtualJoystickImageOuter);
		lua_register(luaState, "SetVirtualJoystickDeadZone", agkLua::SetVirtualJoystickDeadZone);
		lua_register(luaState, "AddVirtualButton", agkLua::AddVirtualButton);
		lua_register(luaState, "DeleteVirtualButton", agkLua::DeleteVirtualButton);
		lua_register(luaState, "GetVirtualButtonExists", agkLua::GetVirtualButtonExists);
		lua_register(luaState, "GetVirtualButtonPressed", agkLua::GetVirtualButtonPressed);
		lua_register(luaState, "GetVirtualButtonReleased", agkLua::GetVirtualButtonReleased);
		lua_register(luaState, "GetVirtualButtonState", agkLua::GetVirtualButtonState);
		lua_register(luaState, "SetVirtualButtonColor", agkLua::SetVirtualButtonColor);
		lua_register(luaState, "SetVirtualButtonAlpha", agkLua::SetVirtualButtonAlpha);
		lua_register(luaState, "SetVirtualButtonPosition", agkLua::SetVirtualButtonPosition);
		lua_register(luaState, "SetVirtualButtonSize", agkLua::SetVirtualButtonSize);
		lua_register(luaState, "SetVirtualButtonActive", agkLua::SetVirtualButtonActive);
		lua_register(luaState, "SetVirtualButtonVisible", agkLua::SetVirtualButtonVisible);
		lua_register(luaState, "SetVirtualButtonImageUp", agkLua::SetVirtualButtonImageUp);
		lua_register(luaState, "SetVirtualButtonImageDown", agkLua::SetVirtualButtonImageDown);
		lua_register(luaState, "SetVirtualButtonText", agkLua::SetVirtualButtonText);
		lua_register(luaState, "GetRawKeyPressed", agkLua::GetRawKeyPressed);
		lua_register(luaState, "GetRawKeyState", agkLua::GetRawKeyState);
		lua_register(luaState, "GetRawKeyReleased", agkLua::GetRawKeyReleased);
		lua_register(luaState, "GetRawLastKey", agkLua::GetRawLastKey);
		lua_register(luaState, "GetPointerPressed", agkLua::GetPointerPressed);
		lua_register(luaState, "GetPointerState", agkLua::GetPointerState);
		lua_register(luaState, "GetPointerReleased", agkLua::GetPointerReleased);
		lua_register(luaState, "GetPointerGesture", agkLua::GetPointerGesture);
		lua_register(luaState, "GetPointerX", agkLua::GetPointerX);
		lua_register(luaState, "GetPointerY", agkLua::GetPointerY);
		lua_register(luaState, "GetDirectionX", agkLua::GetDirectionX);
		lua_register(luaState, "GetDirectionY", agkLua::GetDirectionY);
		lua_register(luaState, "GetDirectionAngle", agkLua::GetDirectionAngle);
		lua_register(luaState, "GetDirectionSpeed", agkLua::GetDirectionSpeed);
		lua_register(luaState, "GetJoystickX", agkLua::GetJoystickX);
		lua_register(luaState, "GetJoystickY", agkLua::GetJoystickY);
		lua_register(luaState, "SetJoystickScreenPosition", agkLua::SetJoystickScreenPosition);
		lua_register(luaState, "SetJoystickDeadZone", agkLua::SetJoystickDeadZone);
		lua_register(luaState, "GetButtonPressed", agkLua::GetButtonPressed);
		lua_register(luaState, "GetButtonState", agkLua::GetButtonState);
		lua_register(luaState, "GetButtonReleased", agkLua::GetButtonReleased);
		lua_register(luaState, "SetButtonScreenPosition", agkLua::SetButtonScreenPosition);
		lua_register(luaState, "StartTextInput", agkLua::StartTextInput);
		lua_register(luaState, "StartTextInput", agkLua::StartTextInput);
		lua_register(luaState, "StopTextInput", agkLua::StopTextInput);
		lua_register(luaState, "GetTextInputState", agkLua::GetTextInputState);
		lua_register(luaState, "GetTextInputCompleted", agkLua::GetTextInputCompleted);
		lua_register(luaState, "GetTextInputCancelled", agkLua::GetTextInputCancelled);
		lua_register(luaState, "GetTextInput", agkLua::GetTextInput);
		lua_register(luaState, "GetTextInput", agkLua::GetTextInput);
		lua_register(luaState, "GetPrevChar", agkLua::GetPrevChar);
		lua_register(luaState, "GetLastChar", agkLua::GetLastChar);
		lua_register(luaState, "SetCursorBlinkTime", agkLua::SetCursorBlinkTime);
		lua_register(luaState, "SetTextInputMaxChars", agkLua::SetTextInputMaxChars);
		lua_register(luaState, "SetTextInputLabel", agkLua::SetTextInputLabel);
		lua_register(luaState, "CreateEditBox", agkLua::CreateEditBox);
		lua_register(luaState, "CreateEditBox", agkLua::CreateEditBox);
		lua_register(luaState, "GetEditBoxExists", agkLua::GetEditBoxExists);
		lua_register(luaState, "DeleteEditBox", agkLua::DeleteEditBox);
		lua_register(luaState, "GetEditBoxHasFocus", agkLua::GetEditBoxHasFocus);
		lua_register(luaState, "GetCurrentEditBox", agkLua::GetCurrentEditBox);
		lua_register(luaState, "SetEditBoxPosition", agkLua::SetEditBoxPosition);
		lua_register(luaState, "SetEditBoxSize", agkLua::SetEditBoxSize);
		lua_register(luaState, "SetEditBoxDepth", agkLua::SetEditBoxDepth);
		lua_register(luaState, "SetEditBoxBorderSize", agkLua::SetEditBoxBorderSize);
		lua_register(luaState, "SetEditBoxBorderColor", agkLua::SetEditBoxBorderColor);
		lua_register(luaState, "SetEditBoxBackgroundColor", agkLua::SetEditBoxBackgroundColor);
		lua_register(luaState, "SetEditBoxText", agkLua::SetEditBoxText);
		lua_register(luaState, "SetEditBoxTextColor", agkLua::SetEditBoxTextColor);
		lua_register(luaState, "SetEditBoxCursorColor", agkLua::SetEditBoxCursorColor);
		lua_register(luaState, "SetEditBoxFontImage", agkLua::SetEditBoxFontImage);
		lua_register(luaState, "SetEditBoxExtendedFontImage", agkLua::SetEditBoxExtendedFontImage);
		lua_register(luaState, "SetEditBoxTextSize", agkLua::SetEditBoxTextSize);
		lua_register(luaState, "SetEditBoxCursorPosition", agkLua::SetEditBoxCursorPosition);
		lua_register(luaState, "SetEditBoxFocus", agkLua::SetEditBoxFocus);
		lua_register(luaState, "SetEditBoxActive", agkLua::SetEditBoxActive);
		lua_register(luaState, "SetEditBoxVisible", agkLua::SetEditBoxVisible);
		lua_register(luaState, "SetEditBoxBorderImage", agkLua::SetEditBoxBorderImage);
		lua_register(luaState, "SetEditBoxBackgroundImage", agkLua::SetEditBoxBackgroundImage);
		lua_register(luaState, "SetEditBoxCursorBlinkTime", agkLua::SetEditBoxCursorBlinkTime);
		lua_register(luaState, "SetEditBoxCursorWidth", agkLua::SetEditBoxCursorWidth);
		lua_register(luaState, "SetEditBoxMaxChars", agkLua::SetEditBoxMaxChars);
		lua_register(luaState, "SetEditBoxMaxLines", agkLua::SetEditBoxMaxLines);
		lua_register(luaState, "SetEditBoxMultiLine", agkLua::SetEditBoxMultiLine);
		lua_register(luaState, "SetEditBoxScissor", agkLua::SetEditBoxScissor);
		lua_register(luaState, "SetEditBoxPasswordMode", agkLua::SetEditBoxPasswordMode);
		lua_register(luaState, "SetEditBoxUseAlternateInput", agkLua::SetEditBoxUseAlternateInput);
		lua_register(luaState, "SetEditBoxWrapMode", agkLua::SetEditBoxWrapMode);
		lua_register(luaState, "FixEditBoxToScreen", agkLua::FixEditBoxToScreen);
		lua_register(luaState, "GetEditBoxText", agkLua::GetEditBoxText);
		lua_register(luaState, "GetEditBoxX", agkLua::GetEditBoxX);
		lua_register(luaState, "GetEditBoxY", agkLua::GetEditBoxY);
		lua_register(luaState, "GetEditBoxWidth", agkLua::GetEditBoxWidth);
		lua_register(luaState, "GetEditBoxHeight", agkLua::GetEditBoxHeight);
		lua_register(luaState, "GetEditBoxChanged", agkLua::GetEditBoxChanged);
		lua_register(luaState, "GetEditBoxActive", agkLua::GetEditBoxActive);
		lua_register(luaState, "GetEditBoxVisible", agkLua::GetEditBoxVisible);
		lua_register(luaState, "GetEditBoxLines", agkLua::GetEditBoxLines);
		lua_register(luaState, "LoadSound", agkLua::LoadSound);
		lua_register(luaState, "LoadSound", agkLua::LoadSound);
		lua_register(luaState, "LoadSound", agkLua::LoadSound);
		lua_register(luaState, "LoadSound", agkLua::LoadSound);
		lua_register(luaState, "PlaySound", agkLua::PlaySound);
		lua_register(luaState, "PlaySound", agkLua::PlaySound);
		lua_register(luaState, "PlaySound", agkLua::PlaySound);
		lua_register(luaState, "PlaySound", agkLua::PlaySound);
		lua_register(luaState, "StopSound", agkLua::StopSound);
		lua_register(luaState, "DeleteSound", agkLua::DeleteSound);
		lua_register(luaState, "GetSoundInstances", agkLua::GetSoundInstances);
		lua_register(luaState, "GetSoundsPlaying", agkLua::GetSoundsPlaying);
		lua_register(luaState, "SetSoundSystemVolume", agkLua::SetSoundSystemVolume);
		lua_register(luaState, "GetSoundExists", agkLua::GetSoundExists);
		lua_register(luaState, "GetSoundMaxRate", agkLua::GetSoundMaxRate);
		lua_register(luaState, "GetSoundMinRate", agkLua::GetSoundMinRate);
		lua_register(luaState, "SaveSound", agkLua::SaveSound);
		lua_register(luaState, "GetSoundInstancePlaying", agkLua::GetSoundInstancePlaying);
		lua_register(luaState, "GetSoundInstanceVolume", agkLua::GetSoundInstanceVolume);
		lua_register(luaState, "GetSoundInstanceRate", agkLua::GetSoundInstanceRate);
		lua_register(luaState, "SetSoundInstanceVolume", agkLua::SetSoundInstanceVolume);
		lua_register(luaState, "SetSoundInstanceRate", agkLua::SetSoundInstanceRate);
		lua_register(luaState, "SetSoundInstanceBalance", agkLua::SetSoundInstanceBalance);
		lua_register(luaState, "GetSoundInstanceLoopCount", agkLua::GetSoundInstanceLoopCount);
		lua_register(luaState, "StopSoundInstance", agkLua::StopSoundInstance);
		lua_register(luaState, "LoadMusic", agkLua::LoadMusic);
		lua_register(luaState, "LoadMusic", agkLua::LoadMusic);
		lua_register(luaState, "SetMusicFileVolume", agkLua::SetMusicFileVolume);
		lua_register(luaState, "PlayMusic", agkLua::PlayMusic);
		lua_register(luaState, "PlayMusic", agkLua::PlayMusic);
		lua_register(luaState, "PlayMusic", agkLua::PlayMusic);
		lua_register(luaState, "PlayMusic", agkLua::PlayMusic);
		lua_register(luaState, "PauseMusic", agkLua::PauseMusic);
		lua_register(luaState, "ResumeMusic", agkLua::ResumeMusic);
		lua_register(luaState, "StopMusic", agkLua::StopMusic);
		lua_register(luaState, "DeleteMusic", agkLua::DeleteMusic);
		lua_register(luaState, "GetMusicPlaying", agkLua::GetMusicPlaying);
		lua_register(luaState, "SetMusicSystemVolume", agkLua::SetMusicSystemVolume);
		lua_register(luaState, "GetMusicExists", agkLua::GetMusicExists);
		lua_register(luaState, "GetMusicDuration", agkLua::GetMusicDuration);
		lua_register(luaState, "GetMusicPosition", agkLua::GetMusicPosition);
		lua_register(luaState, "SeekMusic", agkLua::SeekMusic);
		lua_register(luaState, "RecordSound", agkLua::RecordSound);
		lua_register(luaState, "StopSoundRecording", agkLua::StopSoundRecording);
		lua_register(luaState, "IsSoundRecording", agkLua::IsSoundRecording);
		lua_register(luaState, "SetRawWritePath", agkLua::SetRawWritePath);
		lua_register(luaState, "GetWritePath", agkLua::GetWritePath);
		lua_register(luaState, "GetReadPath", agkLua::GetReadPath);
		lua_register(luaState, "GetDocumentsPath", agkLua::GetDocumentsPath);
		lua_register(luaState, "ChooseRawFile", agkLua::ChooseRawFile);
		lua_register(luaState, "GetFileExists", agkLua::GetFileExists);
		lua_register(luaState, "DeleteFile", agkLua::agkDeleteFile);
		lua_register(luaState, "OpenToWrite", agkLua::OpenToWrite);
		lua_register(luaState, "OpenToWrite", agkLua::OpenToWrite);
		lua_register(luaState, "OpenToWrite", agkLua::OpenToWrite);
		lua_register(luaState, "OpenToWrite", agkLua::OpenToWrite);
		lua_register(luaState, "OpenToRead", agkLua::OpenToRead);
		lua_register(luaState, "OpenToRead", agkLua::OpenToRead);
		lua_register(luaState, "FileIsOpen", agkLua::FileIsOpen);
		lua_register(luaState, "CloseFile", agkLua::CloseFile);
		lua_register(luaState, "FileEOF", agkLua::FileEOF);
		lua_register(luaState, "GetFileSize", agkLua::GetFileSize);
		lua_register(luaState, "WriteByte", agkLua::WriteByte);
		lua_register(luaState, "WriteInteger", agkLua::WriteInteger);
		lua_register(luaState, "WriteFloat", agkLua::WriteFloat);
		lua_register(luaState, "WriteString", agkLua::WriteString);
		lua_register(luaState, "WriteString2", agkLua::WriteString2);
		lua_register(luaState, "WriteLine", agkLua::WriteLine);
		lua_register(luaState, "ReadByte", agkLua::ReadByte);
		lua_register(luaState, "ReadInteger", agkLua::ReadInteger);
		lua_register(luaState, "ReadFloat", agkLua::ReadFloat);
		lua_register(luaState, "ReadString", agkLua::ReadString);
		lua_register(luaState, "ReadString2", agkLua::ReadString2);
		lua_register(luaState, "ReadLine", agkLua::ReadLine);
		lua_register(luaState, "SetCurrentDir", agkLua::SetCurrentDir);
		lua_register(luaState, "GetCurrentDir", agkLua::GetCurrentDir);
		lua_register(luaState, "SetFolder", agkLua::SetFolder);
		lua_register(luaState, "GetFolder", agkLua::GetFolder);
		lua_register(luaState, "MakeFolder", agkLua::MakeFolder);
		lua_register(luaState, "DeleteFolder", agkLua::DeleteFolder);
		lua_register(luaState, "GetFirstFolder", agkLua::GetFirstFolder);
		lua_register(luaState, "GetNextFolder", agkLua::GetNextFolder);
		lua_register(luaState, "GetFolderCount", agkLua::GetFolderCount);
		lua_register(luaState, "GetFirstFile", agkLua::GetFirstFile);
		lua_register(luaState, "GetNextFile", agkLua::GetNextFile);
		lua_register(luaState, "GetFileCount", agkLua::GetFileCount);
		lua_register(luaState, "CreateBroadcastListener", agkLua::CreateBroadcastListener);
		lua_register(luaState, "DeleteBroadcastListener", agkLua::DeleteBroadcastListener);
		lua_register(luaState, "GetBroadcastMessage", agkLua::GetBroadcastMessage);
		lua_register(luaState, "HostNetwork", agkLua::HostNetwork);
		lua_register(luaState, "SetNetworkNoMoreClients", agkLua::SetNetworkNoMoreClients);
		lua_register(luaState, "JoinNetwork", agkLua::JoinNetwork);
		lua_register(luaState, "JoinNetwork", agkLua::JoinNetwork);
		lua_register(luaState, "IsNetworkActive", agkLua::IsNetworkActive);
		lua_register(luaState, "GetDeviceIP", agkLua::GetDeviceIP);
		lua_register(luaState, "CloseNetwork", agkLua::CloseNetwork);
		lua_register(luaState, "SetNetworkLatency", agkLua::SetNetworkLatency);
		lua_register(luaState, "GetNetworkMyClientID", agkLua::GetNetworkMyClientID);
		lua_register(luaState, "GetNetworkNumClients", agkLua::GetNetworkNumClients);
		lua_register(luaState, "GetNetworkFirstClient", agkLua::GetNetworkFirstClient);
		lua_register(luaState, "GetNetworkNextClient", agkLua::GetNetworkNextClient);
		lua_register(luaState, "GetNetworkClientDisconnected", agkLua::GetNetworkClientDisconnected);
		lua_register(luaState, "DeleteNetworkClient", agkLua::DeleteNetworkClient);
		lua_register(luaState, "GetNetworkClientName", agkLua::GetNetworkClientName);
		lua_register(luaState, "GetNetworkClientPing", agkLua::GetNetworkClientPing);
		lua_register(luaState, "GetNetworkServerID", agkLua::GetNetworkServerID);
		lua_register(luaState, "SetNetworkLocalInteger", agkLua::SetNetworkLocalInteger);
		lua_register(luaState, "SetNetworkLocalInteger", agkLua::SetNetworkLocalInteger);
		lua_register(luaState, "SetNetworkLocalFloat", agkLua::SetNetworkLocalFloat);
		lua_register(luaState, "SetNetworkLocalFloat", agkLua::SetNetworkLocalFloat);
		lua_register(luaState, "GetNetworkClientInteger", agkLua::GetNetworkClientInteger);
		lua_register(luaState, "GetNetworkClientFloat", agkLua::GetNetworkClientFloat);
		lua_register(luaState, "CreateNetworkMessage", agkLua::CreateNetworkMessage);
		lua_register(luaState, "AddNetworkMessageInteger", agkLua::AddNetworkMessageInteger);
		lua_register(luaState, "AddNetworkMessageFloat", agkLua::AddNetworkMessageFloat);
		lua_register(luaState, "AddNetworkMessageString", agkLua::AddNetworkMessageString);
		lua_register(luaState, "GetNetworkMessageFromIP", agkLua::GetNetworkMessageFromIP);
		lua_register(luaState, "GetNetworkMessageFromClient", agkLua::GetNetworkMessageFromClient);
		lua_register(luaState, "GetNetworkMessageInteger", agkLua::GetNetworkMessageInteger);
		lua_register(luaState, "GetNetworkMessageFloat", agkLua::GetNetworkMessageFloat);
		lua_register(luaState, "GetNetworkMessageString", agkLua::GetNetworkMessageString);
		lua_register(luaState, "DeleteNetworkMessage", agkLua::DeleteNetworkMessage);
		lua_register(luaState, "SendNetworkMessage", agkLua::SendNetworkMessage);
		lua_register(luaState, "GetNetworkMessage", agkLua::GetNetworkMessage);
		lua_register(luaState, "SetNetworkClientUserData", agkLua::SetNetworkClientUserData);
		lua_register(luaState, "GetNetworkClientUserData", agkLua::GetNetworkClientUserData);
		lua_register(luaState, "CreateHTTPConnection", agkLua::CreateHTTPConnection);
		lua_register(luaState, "DeleteHTTPConnection", agkLua::DeleteHTTPConnection);
		lua_register(luaState, "GetInternetState", agkLua::GetInternetState);
		lua_register(luaState, "SetHTTPHost", agkLua::SetHTTPHost);
		lua_register(luaState, "SetHTTPHost", agkLua::SetHTTPHost);
		lua_register(luaState, "CloseHTTPConnection", agkLua::CloseHTTPConnection);
		lua_register(luaState, "SetHTTPTimeout", agkLua::SetHTTPTimeout);
		lua_register(luaState, "SendHTTPRequest", agkLua::SendHTTPRequest);
		lua_register(luaState, "SendHTTPRequest", agkLua::SendHTTPRequest);
		lua_register(luaState, "SendHTTPRequestASync", agkLua::SendHTTPRequestASync);
		lua_register(luaState, "SendHTTPRequestASync", agkLua::SendHTTPRequestASync);
		lua_register(luaState, "SendHTTPFile", agkLua::SendHTTPFile);
		lua_register(luaState, "GetHTTPResponse", agkLua::GetHTTPResponse);
		lua_register(luaState, "GetHTTPResponseReady", agkLua::GetHTTPResponseReady);
		lua_register(luaState, "GetHTTPResponseC", agkLua::GetHTTPResponseC);
		lua_register(luaState, "GetHTTPFile", agkLua::GetHTTPFile);
		lua_register(luaState, "GetHTTPFile", agkLua::GetHTTPFile);
		lua_register(luaState, "GetHTTPFileComplete", agkLua::GetHTTPFileComplete);
		lua_register(luaState, "GetHTTPFileProgress", agkLua::GetHTTPFileProgress);
		lua_register(luaState, "OpenBrowser", agkLua::OpenBrowser);
		lua_register(luaState, "Str", agkLua::Str);
		lua_register(luaState, "Str", agkLua::Str);
		lua_register(luaState, "Str", agkLua::Str);
		lua_register(luaState, "Bin", agkLua::Bin);
		lua_register(luaState, "Hex", agkLua::Hex);
		lua_register(luaState, "Val", agkLua::Val);
		lua_register(luaState, "Val", agkLua::Val);
		lua_register(luaState, "ValFloat", agkLua::ValFloat);
		lua_register(luaState, "Left", agkLua::Left);
		lua_register(luaState, "Right", agkLua::Right);
		lua_register(luaState, "Mid", agkLua::Mid);
		lua_register(luaState, "Asc", agkLua::Asc);
		lua_register(luaState, "Len", agkLua::Len);
		lua_register(luaState, "Chr", agkLua::Chr);
		lua_register(luaState, "Lower", agkLua::Lower);
		lua_register(luaState, "Upper", agkLua::Upper);
		lua_register(luaState, "Spaces", agkLua::Spaces);
		lua_register(luaState, "CountStringTokens", agkLua::CountStringTokens);
		lua_register(luaState, "GetStringToken", agkLua::GetStringToken);
		lua_register(luaState, "GetManagedSpriteCount", agkLua::GetManagedSpriteCount);
		lua_register(luaState, "GetManagedSpriteSortedCount", agkLua::GetManagedSpriteSortedCount);
		lua_register(luaState, "GetManagedSpriteDrawnCount", agkLua::GetManagedSpriteDrawnCount);
		lua_register(luaState, "GetPixelsDrawn", agkLua::GetPixelsDrawn);
		lua_register(luaState, "GetManagedSpriteDrawCalls", agkLua::GetManagedSpriteDrawCalls);
		lua_register(luaState, "GetParticleDrawnPointCount", agkLua::GetParticleDrawnPointCount);
		lua_register(luaState, "GetParticleDrawnQuadCount", agkLua::GetParticleDrawnQuadCount);
		lua_register(luaState, "GetUpdateTime", agkLua::GetUpdateTime);
		lua_register(luaState, "GetPhysicsTime", agkLua::GetPhysicsTime);
		lua_register(luaState, "GetDrawingSetupTime", agkLua::GetDrawingSetupTime);
		lua_register(luaState, "GetDrawingTime", agkLua::GetDrawingTime);
		lua_register(luaState, "GetLoadedImages", agkLua::GetLoadedImages);
		lua_register(luaState, "GetUnassignedImages", agkLua::GetUnassignedImages);
		lua_register(luaState, "GetUnassignedImageFileName", agkLua::GetUnassignedImageFileName);
		lua_register(luaState, "GetYearFromUnix64", agkLua::GetYearFromUnix64);
		lua_register(luaState, "GetMonthFromUnix64", agkLua::GetMonthFromUnix64);
		lua_register(luaState, "GetDayFromUnix64", agkLua::GetDayFromUnix64);
		lua_register(luaState, "GetHoursFromUnix64", agkLua::GetHoursFromUnix64);
		lua_register(luaState, "GetMinutesFromUnix64", agkLua::GetMinutesFromUnix64);
		lua_register(luaState, "GetSecondsFromUnix64", agkLua::GetSecondsFromUnix64);
		lua_register(luaState, "GetUnixFromDate64", agkLua::GetUnixFromDate64);
		lua_register(luaState, "GetUnixTime64", agkLua::GetUnixTime64);
		lua_register(luaState, "GetYearFromUnix32", agkLua::GetYearFromUnix32);
		lua_register(luaState, "GetYearFromUnix", agkLua::GetYearFromUnix);
		lua_register(luaState, "GetMonthFromUnix", agkLua::GetMonthFromUnix);
		lua_register(luaState, "GetDaysFromUnix", agkLua::GetDaysFromUnix);
		lua_register(luaState, "GetHoursFromUnix", agkLua::GetHoursFromUnix);
		lua_register(luaState, "GetMinutesFromUnix", agkLua::GetMinutesFromUnix);
		lua_register(luaState, "GetSecondsFromUnix", agkLua::GetSecondsFromUnix);
		lua_register(luaState, "GetUnixFromDate", agkLua::GetUnixFromDate);
		lua_register(luaState, "GetUnixTime", agkLua::GetUnixTime);
		lua_register(luaState, "GetLeapYear", agkLua::GetLeapYear);
		lua_register(luaState, "GetCurrentDate", agkLua::GetCurrentDate);
		lua_register(luaState, "GetCurrentTime", agkLua::agkGetCurrentTime);
		lua_register(luaState, "GetDayOfWeek", agkLua::GetDayOfWeek);
		lua_register(luaState, "SetInneractiveDetails", agkLua::SetInneractiveDetails);
		lua_register(luaState, "SetAdMobDetails", agkLua::SetAdMobDetails);
		lua_register(luaState, "SetChartboostDetails", agkLua::SetChartboostDetails);
		lua_register(luaState, "CreateFullscreenAdvert", agkLua::CreateFullscreenAdvert);
		lua_register(luaState, "CreateAdvert", agkLua::CreateAdvert);
		lua_register(luaState, "CreateAdvertEx", agkLua::CreateAdvertEx);
		lua_register(luaState, "SetAdvertPosition", agkLua::SetAdvertPosition);
		lua_register(luaState, "SetAdvertLocation", agkLua::SetAdvertLocation);
		lua_register(luaState, "SetAdvertLocationEx", agkLua::SetAdvertLocationEx);
		lua_register(luaState, "SetAdvertVisible", agkLua::SetAdvertVisible);
		lua_register(luaState, "RequestAdvertRefresh", agkLua::RequestAdvertRefresh);
		lua_register(luaState, "DeleteAdvert", agkLua::DeleteAdvert);
		lua_register(luaState, "Log", agkLua::Log);
		lua_register(luaState, "SocialPluginsSetup", agkLua::SocialPluginsSetup);
		lua_register(luaState, "SocialPluginsDestroy", agkLua::SocialPluginsDestroy);
		lua_register(luaState, "LoadVideo", agkLua::LoadVideo);
		lua_register(luaState, "DeleteVideo", agkLua::DeleteVideo);
		lua_register(luaState, "SetVideoDimensions", agkLua::SetVideoDimensions);
		lua_register(luaState, "PlayVideo", agkLua::PlayVideo);
		lua_register(luaState, "PauseVideo", agkLua::PauseVideo);
		lua_register(luaState, "StopVideo", agkLua::StopVideo);
		lua_register(luaState, "GetVideoPlaying", agkLua::GetVideoPlaying);
		lua_register(luaState, "GetVideoPosition", agkLua::GetVideoPosition);
		lua_register(luaState, "GetVideoDuration", agkLua::GetVideoDuration);
		lua_register(luaState, "SetVideoVolume", agkLua::SetVideoVolume);
		lua_register(luaState, "GetVideoWidth", agkLua::GetVideoWidth);
		lua_register(luaState, "GetVideoHeight", agkLua::GetVideoHeight);
		lua_register(luaState, "RateApp", agkLua::RateApp);
		lua_register(luaState, "RateApp", agkLua::RateApp);
		lua_register(luaState, "RateApp", agkLua::RateApp);
		lua_register(luaState, "InAppPurchaseSetKeys", agkLua::InAppPurchaseSetKeys);
		lua_register(luaState, "InAppPurchaseSetTitle", agkLua::InAppPurchaseSetTitle);
		lua_register(luaState, "InAppPurchaseAddProductID", agkLua::InAppPurchaseAddProductID);
		lua_register(luaState, "InAppPurchaseSetup", agkLua::InAppPurchaseSetup);
		lua_register(luaState, "InAppPurchaseActivate", agkLua::InAppPurchaseActivate);
		lua_register(luaState, " GetInAppPurchaseState", agkLua::GetInAppPurchaseState);
		lua_register(luaState, " GetInAppPurchaseAvailable", agkLua::GetInAppPurchaseAvailable);
		lua_register(luaState, "InAppPurchaseRestore		", agkLua::InAppPurchaseRestore);
		lua_register(luaState, "FacebookSetup", agkLua::FacebookSetup);
		lua_register(luaState, "FacebookLogin", agkLua::FacebookLogin);
		lua_register(luaState, "FacebookLogout", agkLua::FacebookLogout);
		lua_register(luaState, "FacebookShowLikeButton", agkLua::FacebookShowLikeButton);
		lua_register(luaState, "FacebookDestroyLikeButton", agkLua::FacebookDestroyLikeButton);
		lua_register(luaState, "FacebookPostOnMyWall", agkLua::FacebookPostOnMyWall);
		lua_register(luaState, "FacebookPostOnFriendsWall", agkLua::FacebookPostOnFriendsWall);
		lua_register(luaState, "FacebookInviteFriend", agkLua::FacebookInviteFriend);
		lua_register(luaState, "FacebookGetFriends", agkLua::FacebookGetFriends);
		lua_register(luaState, " FacebookGetFriendsState", agkLua::FacebookGetFriendsState);
		lua_register(luaState, " FacebookGetFriendsCount", agkLua::FacebookGetFriendsCount);
		lua_register(luaState, "FacebookGetFriendsName", agkLua::FacebookGetFriendsName);
		lua_register(luaState, "FacebookGetFriendsID", agkLua::FacebookGetFriendsID);
		lua_register(luaState, "FacebookDownloadFriendsPhoto", agkLua::FacebookDownloadFriendsPhoto);
		lua_register(luaState, " GetFacebookDownloadState", agkLua::GetFacebookDownloadState);
		lua_register(luaState, "GetFacebookDownloadFile", agkLua::GetFacebookDownloadFile);
		lua_register(luaState, " GetFacebookLoggedIn", agkLua::GetFacebookLoggedIn);
		lua_register(luaState, "FacebookGetUserID			", agkLua::FacebookGetUserID);
		lua_register(luaState, "FacebookGetUserName		", agkLua::FacebookGetUserName);
		lua_register(luaState, "TwitterSetup", agkLua::TwitterSetup);
		lua_register(luaState, "TwitterMessage", agkLua::TwitterMessage);
		lua_register(luaState, "NotificationCreate", agkLua::NotificationCreate);
		lua_register(luaState, "NotificationReset", agkLua::NotificationReset);
		lua_register(luaState, " GetNotification", agkLua::GetNotification);
		lua_register(luaState, "GetNotificationData", agkLua::GetNotificationData);
		lua_register(luaState, " GetNotificationType", agkLua::GetNotificationType);
		lua_register(luaState, "SetNotificationImage		", agkLua::SetNotificationImage);
		lua_register(luaState, "SetNotificationText", agkLua::SetNotificationText);
		lua_register(luaState, "SetPushNotificationKeys", agkLua::SetPushNotificationKeys);
		lua_register(luaState, "PushNotificationSetup", agkLua::PushNotificationSetup);
		lua_register(luaState, "GetPushNotificationToken", agkLua::GetPushNotificationToken);
		lua_register(luaState, "CreateZip", agkLua::CreateZip);
		lua_register(luaState, "CreateZip", agkLua::CreateZip);
		lua_register(luaState, "AddZipEntry", agkLua::AddZipEntry);
		lua_register(luaState, "CloseZip", agkLua::CloseZip);
		lua_register(luaState, "ExtractZip", agkLua::ExtractZip);
		lua_register(luaState, "CreateMemblock", agkLua::CreateMemblock);
		lua_register(luaState, "CreateMemblock", agkLua::CreateMemblock);
		lua_register(luaState, "GetMemblockExists", agkLua::GetMemblockExists);
		lua_register(luaState, "DeleteMemblock", agkLua::DeleteMemblock);
		lua_register(luaState, "GetMemblockPtr", agkLua::GetMemblockPtr);
		lua_register(luaState, "CopyMemblock", agkLua::CopyMemblock);
		lua_register(luaState, "GetMemblockSize", agkLua::GetMemblockSize);
		lua_register(luaState, "GetMemblockByte", agkLua::GetMemblockByte);
		lua_register(luaState, "GetMemblockByteSigned", agkLua::GetMemblockByteSigned);
		lua_register(luaState, "GetMemblockShort", agkLua::GetMemblockShort);
		lua_register(luaState, "GetMemblockInt", agkLua::GetMemblockInt);
		lua_register(luaState, "GetMemblockFloat", agkLua::GetMemblockFloat);
		lua_register(luaState, "GetMemblockString", agkLua::GetMemblockString);
		lua_register(luaState, "SetMemblockByte", agkLua::SetMemblockByte);
		lua_register(luaState, "SetMemblockByteSigned", agkLua::SetMemblockByteSigned);
		lua_register(luaState, "SetMemblockShort", agkLua::SetMemblockShort);
		lua_register(luaState, "SetMemblockInt", agkLua::SetMemblockInt);
		lua_register(luaState, "SetMemblockFloat", agkLua::SetMemblockFloat);
		lua_register(luaState, "SetMemblockString", agkLua::SetMemblockString);
		lua_register(luaState, "CreateMemblockFromImage", agkLua::CreateMemblockFromImage);
		lua_register(luaState, "CreateMemblockFromImage", agkLua::CreateMemblockFromImage);
		lua_register(luaState, "CreateImageFromMemblock", agkLua::CreateImageFromMemblock);
		lua_register(luaState, "CreateImageFromMemblock", agkLua::CreateImageFromMemblock);
		lua_register(luaState, "CreateMemblockFromSound", agkLua::CreateMemblockFromSound);
		lua_register(luaState, "CreateMemblockFromSound", agkLua::CreateMemblockFromSound);
		lua_register(luaState, "CreateSoundFromMemblock", agkLua::CreateSoundFromMemblock);
		lua_register(luaState, "CreateSoundFromMemblock", agkLua::CreateSoundFromMemblock);
		lua_register(luaState, "CreateMemblockFromFile", agkLua::CreateMemblockFromFile);
		lua_register(luaState, "CreateMemblockFromFile", agkLua::CreateMemblockFromFile);
		lua_register(luaState, "CreateFileFromMemblock", agkLua::CreateFileFromMemblock);
		lua_register(luaState, "InitialiseSensorCommands	", agkLua::InitialiseSensorCommands);
		lua_register(luaState, "FreeSensorCommands", agkLua::FreeSensorCommands);
		lua_register(luaState, "GetNFCExists", agkLua::GetNFCExists);
		lua_register(luaState, "GetRawNFCCount", agkLua::GetRawNFCCount);
		lua_register(luaState, "GetRawFirstNFCDevice", agkLua::GetRawFirstNFCDevice);
		lua_register(luaState, "GetRawNextNFCDevice", agkLua::GetRawNextNFCDevice);
		lua_register(luaState, "GetRawNFCName", agkLua::GetRawNFCName);
		lua_register(luaState, "SendRawNFCData", agkLua::SendRawNFCData);
		lua_register(luaState, "GetRawNFCDataState", agkLua::GetRawNFCDataState);
		lua_register(luaState, "GetRawNFCData", agkLua::GetRawNFCData);
		lua_register(luaState, "GetGameCenterExists", agkLua::GetGameCenterExists);
		lua_register(luaState, "GameCenterSetup", agkLua::GameCenterSetup);
		lua_register(luaState, "GameCenterLogin", agkLua::GameCenterLogin);
		lua_register(luaState, "GetGameCenterLoggedIn", agkLua::GetGameCenterLoggedIn);
		lua_register(luaState, "GameCenterSubmitScore", agkLua::GameCenterSubmitScore);
		lua_register(luaState, "GameCenterShowLeaderBoard", agkLua::GameCenterShowLeaderBoard);
		lua_register(luaState, "GameCenterSubmitAchievement", agkLua::GameCenterSubmitAchievement);
		lua_register(luaState, "GameCenterAchievementsShow", agkLua::GameCenterAchievementsShow);
		lua_register(luaState, "GameCenterAchievementsReset", agkLua::GameCenterAchievementsReset);
		lua_register(luaState, "MakeColor", agkLua::MakeColor);
		lua_register(luaState, "GetColorRed", agkLua::GetColorRed);
		lua_register(luaState, "GetColorGreen", agkLua::GetColorGreen);
		lua_register(luaState, "GetColorBlue", agkLua::GetColorBlue);
		lua_register(luaState, "DrawLine", agkLua::DrawLine);
		lua_register(luaState, "DrawLine", agkLua::DrawLine);
		lua_register(luaState, "DrawBox", agkLua::DrawBox);
		lua_register(luaState, "DrawEllipse", agkLua::DrawEllipse);
		lua_register(luaState, "SetGlobal3DDepth", agkLua::SetGlobal3DDepth);
		lua_register(luaState, "CreateObjectBox", agkLua::CreateObjectBox);
		lua_register(luaState, "CreateObjectBox", agkLua::CreateObjectBox);
		lua_register(luaState, "CreateObjectSphere", agkLua::CreateObjectSphere);
		lua_register(luaState, "CreateObjectSphere", agkLua::CreateObjectSphere);
		lua_register(luaState, "CreateObjectCone", agkLua::CreateObjectCone);
		lua_register(luaState, "CreateObjectCone", agkLua::CreateObjectCone);
		lua_register(luaState, "CreateObjectCylinder", agkLua::CreateObjectCylinder);
		lua_register(luaState, "CreateObjectCylinder", agkLua::CreateObjectCylinder);
		lua_register(luaState, "CreateObjectPlane", agkLua::CreateObjectPlane);
		lua_register(luaState, "CreateObjectPlane", agkLua::CreateObjectPlane);
		lua_register(luaState, "CreateObjectQuad", agkLua::CreateObjectQuad);
		lua_register(luaState, "CreateObjectQuad", agkLua::CreateObjectQuad);
		lua_register(luaState, "LoadObject", agkLua::LoadObject);
		lua_register(luaState, "LoadObject", agkLua::LoadObject);
		lua_register(luaState, "LoadObject", agkLua::LoadObject);
		lua_register(luaState, "LoadObject", agkLua::LoadObject);
		lua_register(luaState, "CloneObject", agkLua::CloneObject);
		lua_register(luaState, "CloneObject", agkLua::CloneObject);
		lua_register(luaState, "InstanceObject", agkLua::InstanceObject);
		lua_register(luaState, "InstanceObject", agkLua::InstanceObject);
		lua_register(luaState, "GetObjectExists", agkLua::GetObjectExists);
		lua_register(luaState, "DeleteObject", agkLua::DeleteObject);
		lua_register(luaState, "GetObjectPtr", agkLua::GetObjectPtr);
		lua_register(luaState, "DeleteAllObjects", agkLua::DeleteAllObjects);
		lua_register(luaState, "SetObjectPosition", agkLua::SetObjectPosition);
		lua_register(luaState, "SetObjectRotation", agkLua::SetObjectRotation);
		lua_register(luaState, "SetObjectRotationQuat", agkLua::SetObjectRotationQuat);
		lua_register(luaState, "SetObjectScale", agkLua::SetObjectScale);
		lua_register(luaState, "MoveObjectLocalX", agkLua::MoveObjectLocalX);
		lua_register(luaState, "MoveObjectLocalY", agkLua::MoveObjectLocalY);
		lua_register(luaState, "MoveObjectLocalZ", agkLua::MoveObjectLocalZ);
		lua_register(luaState, "RotateObjectLocalX", agkLua::RotateObjectLocalX);
		lua_register(luaState, "RotateObjectLocalY", agkLua::RotateObjectLocalY);
		lua_register(luaState, "RotateObjectLocalZ", agkLua::RotateObjectLocalZ);
		lua_register(luaState, "RotateObjectGlobalX", agkLua::RotateObjectGlobalX);
		lua_register(luaState, "RotateObjectGlobalY", agkLua::RotateObjectGlobalY);
		lua_register(luaState, "RotateObjectGlobalZ", agkLua::RotateObjectGlobalZ);
		lua_register(luaState, "GetObjectX", agkLua::GetObjectX);
		lua_register(luaState, "GetObjectY", agkLua::GetObjectY);
		lua_register(luaState, "GetObjectZ", agkLua::GetObjectZ);
		lua_register(luaState, "GetObjectAngleX", agkLua::GetObjectAngleX);
		lua_register(luaState, "GetObjectAngleY", agkLua::GetObjectAngleY);
		lua_register(luaState, "GetObjectAngleZ", agkLua::GetObjectAngleZ);
		lua_register(luaState, "GetObjectQuatW", agkLua::GetObjectQuatW);
		lua_register(luaState, "GetObjectQuatX", agkLua::GetObjectQuatX);
		lua_register(luaState, "GetObjectQuatY", agkLua::GetObjectQuatY);
		lua_register(luaState, "GetObjectQuatZ", agkLua::GetObjectQuatZ);
		lua_register(luaState, "SetObjectLookAt", agkLua::SetObjectLookAt);
		lua_register(luaState, "SetObjectImage", agkLua::SetObjectImage);
		lua_register(luaState, "SetObjectShader", agkLua::SetObjectShader);
		lua_register(luaState, "SetObjectColor", agkLua::SetObjectColor);
		lua_register(luaState, "SetObjectLightMode", agkLua::SetObjectLightMode);
		lua_register(luaState, "SetObjectDepthReadMode", agkLua::SetObjectDepthReadMode);
		lua_register(luaState, "SetObjectDepthWrite", agkLua::SetObjectDepthWrite);
		lua_register(luaState, "SetObjectTransparency", agkLua::SetObjectTransparency);
		lua_register(luaState, "SetObjectCullMode", agkLua::SetObjectCullMode);
		lua_register(luaState, "SetObjectVisible", agkLua::SetObjectVisible);
		lua_register(luaState, "GetObjectDepthReadMode", agkLua::GetObjectDepthReadMode);
		lua_register(luaState, "GetObjectDepthWrite", agkLua::GetObjectDepthWrite);
		lua_register(luaState, "GetObjectTransparency", agkLua::GetObjectTransparency);
		lua_register(luaState, "GetObjectCullMode", agkLua::GetObjectCullMode);
		lua_register(luaState, "GetObjectVisible", agkLua::GetObjectVisible);
		lua_register(luaState, "GetObjectInScreen", agkLua::GetObjectInScreen);
		lua_register(luaState, "DrawObject", agkLua::DrawObject);
		lua_register(luaState, "GetScreenXFrom3D", agkLua::GetScreenXFrom3D);
		lua_register(luaState, "GetScreenYFrom3D", agkLua::GetScreenYFrom3D);
		lua_register(luaState, "Get3DVectorXFromScreen", agkLua::Get3DVectorXFromScreen);
		lua_register(luaState, "Get3DVectorYFromScreen", agkLua::Get3DVectorYFromScreen);
		lua_register(luaState, "Get3DVectorZFromScreen", agkLua::Get3DVectorZFromScreen);
		lua_register(luaState, "SetObjectCollisionMode", agkLua::SetObjectCollisionMode);
		lua_register(luaState, "InternalSphereCast", agkLua::InternalSphereCast);
		lua_register(luaState, "ObjectRayCast", agkLua::ObjectRayCast);
		lua_register(luaState, "ObjectSphereCast", agkLua::ObjectSphereCast);
		lua_register(luaState, "ObjectSphereSlide", agkLua::ObjectSphereSlide);
		lua_register(luaState, "GetObjectRayCastNumHits", agkLua::GetObjectRayCastNumHits);
		lua_register(luaState, "GetObjectRayCastHitID", agkLua::GetObjectRayCastHitID);
		lua_register(luaState, "GetObjectRayCastX", agkLua::GetObjectRayCastX);
		lua_register(luaState, "GetObjectRayCastY", agkLua::GetObjectRayCastY);
		lua_register(luaState, "GetObjectRayCastZ", agkLua::GetObjectRayCastZ);
		lua_register(luaState, "GetObjectRayCastSlideX", agkLua::GetObjectRayCastSlideX);
		lua_register(luaState, "GetObjectRayCastSlideY", agkLua::GetObjectRayCastSlideY);
		lua_register(luaState, "GetObjectRayCastSlideZ", agkLua::GetObjectRayCastSlideZ);
		lua_register(luaState, "GetObjectRayCastNormalX", agkLua::GetObjectRayCastNormalX);
		lua_register(luaState, "GetObjectRayCastNormalY", agkLua::GetObjectRayCastNormalY);
		lua_register(luaState, "GetObjectRayCastNormalZ", agkLua::GetObjectRayCastNormalZ);
		lua_register(luaState, "GetObjectRayCastBounceX", agkLua::GetObjectRayCastBounceX);
		lua_register(luaState, "GetObjectRayCastBounceY", agkLua::GetObjectRayCastBounceY);
		lua_register(luaState, "GetObjectRayCastBounceZ", agkLua::GetObjectRayCastBounceZ);
		lua_register(luaState, "GetObjectRayCastDistance", agkLua::GetObjectRayCastDistance);
		lua_register(luaState, "LoadShader", agkLua::LoadShader);
		lua_register(luaState, "LoadShader", agkLua::LoadShader);
		lua_register(luaState, "LoadFullScreenShader", agkLua::LoadFullScreenShader);
		lua_register(luaState, "LoadFullScreenShader", agkLua::LoadFullScreenShader);
		lua_register(luaState, "LoadSpriteShader", agkLua::LoadSpriteShader);
		lua_register(luaState, "LoadSpriteShader", agkLua::LoadSpriteShader);
		lua_register(luaState, "SetShaderConstantByName", agkLua::SetShaderConstantByName);
		lua_register(luaState, "SetCameraPosition", agkLua::SetCameraPosition);
		lua_register(luaState, "SetCameraRotationQuat", agkLua::SetCameraRotationQuat);
		lua_register(luaState, "SetCameraRotation", agkLua::SetCameraRotation);
		lua_register(luaState, "MoveCameraLocalX", agkLua::MoveCameraLocalX);
		lua_register(luaState, "MoveCameraLocalY", agkLua::MoveCameraLocalY);
		lua_register(luaState, "MoveCameraLocalZ", agkLua::MoveCameraLocalZ);
		lua_register(luaState, "RotateCameraLocalX", agkLua::RotateCameraLocalX);
		lua_register(luaState, "RotateCameraLocalY", agkLua::RotateCameraLocalY);
		lua_register(luaState, "RotateCameraLocalZ", agkLua::RotateCameraLocalZ);
		lua_register(luaState, "RotateCameraGlobalX", agkLua::RotateCameraGlobalX);
		lua_register(luaState, "RotateCameraGlobalY", agkLua::RotateCameraGlobalY);
		lua_register(luaState, "RotateCameraGlobalZ", agkLua::RotateCameraGlobalZ);
		lua_register(luaState, "GetCameraX", agkLua::GetCameraX);
		lua_register(luaState, "GetCameraY", agkLua::GetCameraY);
		lua_register(luaState, "GetCameraZ", agkLua::GetCameraZ);
		lua_register(luaState, "GetCameraAngleX", agkLua::GetCameraAngleX);
		lua_register(luaState, "GetCameraAngleY", agkLua::GetCameraAngleY);
		lua_register(luaState, "GetCameraAngleZ", agkLua::GetCameraAngleZ);
		lua_register(luaState, "GetCameraQuatW", agkLua::GetCameraQuatW);
		lua_register(luaState, "GetCameraQuatX", agkLua::GetCameraQuatX);
		lua_register(luaState, "GetCameraQuatY", agkLua::GetCameraQuatY);
		lua_register(luaState, "GetCameraQuatZ", agkLua::GetCameraQuatZ);
		lua_register(luaState, "SetCameraLookAt", agkLua::SetCameraLookAt);
		lua_register(luaState, "SetCameraRange", agkLua::SetCameraRange);
		lua_register(luaState, "SetCameraFOV", agkLua::SetCameraFOV);
		lua_register(luaState, "SetCameraAspect", agkLua::SetCameraAspect);
		lua_register(luaState, "CreateLightPoint", agkLua::CreateLightPoint);
		lua_register(luaState, "GetLightPointExists", agkLua::GetLightPointExists);
		lua_register(luaState, "DeleteLightPoint", agkLua::DeleteLightPoint);
		lua_register(luaState, "ClearLightPoints", agkLua::ClearLightPoints);
		lua_register(luaState, "SetLightPointPosition", agkLua::SetLightPointPosition);
		lua_register(luaState, "SetLightPointColor", agkLua::SetLightPointColor);
		lua_register(luaState, "SetLightPointRadius", agkLua::SetLightPointRadius);
		lua_register(luaState, "CreateLightDirectional", agkLua::CreateLightDirectional);
		lua_register(luaState, "GetLightDirectionalExists", agkLua::GetLightDirectionalExists);
		lua_register(luaState, "DeleteLightDirectional", agkLua::DeleteLightDirectional);
		lua_register(luaState, "ClearLightDirectionals", agkLua::ClearLightDirectionals);
		lua_register(luaState, "SetLightDirectionalDirection", agkLua::SetLightDirectionalDirection);
		lua_register(luaState, "SetLightDirectionalColor", agkLua::SetLightDirectionalColor);

	}


	static int SetScreenResolution(lua_State *);
	static int SetWindowSize(lua_State *);
	static int GetDeviceWidth(lua_State *);
	static int GetRealDeviceWidth(lua_State *);
	static int GetDeviceHeight(lua_State *);
	static int GetRealDeviceHeight(lua_State *);
	static int GetMaxDeviceWidth(lua_State *);
	static int GetMaxDeviceHeight(lua_State *);
	static int SetVSync(lua_State *);
	static int SetSyncRate(lua_State *);
	static int SetVirtualResolution(lua_State *);
	static int SetDisplayAspect(lua_State *);
	static int GetVirtualWidth(lua_State *);
	static int GetVirtualHeight(lua_State *);
	static int GetScreenBoundsLeft(lua_State *);
	static int GetScreenBoundsRight(lua_State *);
	static int GetScreenBoundsTop(lua_State *);
	static int GetScreenBoundsBottom(lua_State *);
	static int GetDisplayAspect(lua_State *);
	static int GetOrientation(lua_State *);
	static int GetResumed(lua_State *);
	static int GetResumed2(lua_State *);
	static int GetDeviceName(lua_State *);
	static int GetDeviceBaseName(lua_State *);
	static int GetDeviceType(lua_State *);
	static int GetAppName(lua_State *);
	static int GetCL(lua_State *);
	static int SetWindowTitle(lua_State *);
	static int UpdateDeviceSize(lua_State *);
	static int StepPhysics(lua_State *);
	static int Sync(lua_State *);
	static int Break(lua_State *);
	static int Update(lua_State *);
	static int Update2D(lua_State *);
	static int Update3D(lua_State *);
	static int DrawAllLines(lua_State *);
	static int Render2DBack(lua_State *);
	static int Render2DFront(lua_State *);
	static int Render3D(lua_State *);
	static int Render(lua_State *);
	static int Swap(lua_State *);
	static int UpdateInput(lua_State *);
	static int ClearScreen(lua_State *);
	static int ClearDepthBuffer(lua_State *);
	static int Sleep(lua_State *);
	static int Timer(lua_State *);
	static int ResetTimer(lua_State *);
	static int GetRunTime(lua_State *);
	static int GetSeconds(lua_State *);
	static int GetFrameTime(lua_State *);
	static int GetMilliseconds(lua_State *);
	static int GetDeviceLanguage(lua_State *);
	static int SetSleepMode(lua_State *);
	static int SetExpansionFileKey(lua_State *);
	static int SetExpansionFileVersion(lua_State *);
	static int GetExpansionFileState(lua_State *);
	static int DownloadExpansionFile(lua_State *);
	static int GetExpansionFileProgress(lua_State *);
	static int GetDeviceID(lua_State *);
	static int Sha1(lua_State *);
	static int HTTPEncode(lua_State *);
	static int HTTPDecode(lua_State *);
	static int GetNumProcessors(lua_State *);
	static int SortArray(lua_State *);
	static int SortFloatToUINT(lua_State *);
	static int SortUINTToFloat(lua_State *);
	static int SortIntToUINT(lua_State *);
	static int SortUINTToInt(lua_State *);
	static int SetRandomSeed(lua_State *);
	static int Random(lua_State *);
	static int RandomSign(lua_State *);
	static int SetRandomSeed2(lua_State *);
	static int Random2(lua_State *);
	static int Sin(lua_State *);
	static int Cos(lua_State *);
	static int Tan(lua_State *);
	static int SinRad(lua_State *);
	static int CosRad(lua_State *);
	static int TanRad(lua_State *);
	static int ASin(lua_State *);
	static int ACos(lua_State *);
	static int ATan(lua_State *);
	static int ATan2(lua_State *);
	static int ATanFull(lua_State *);
	static int ASinRad(lua_State *);
	static int ACosRad(lua_State *);
	static int ATanRad(lua_State *);
	static int ATan2Rad(lua_State *);
	static int ATanFullRad(lua_State *);
	static int Trunc(lua_State *);
	static int Floor(lua_State *);
	static int Ceil(lua_State *);
	static int Round(lua_State *);
	static int Sqrt(lua_State *);
	static int Abs(lua_State *);
	static int Mod(lua_State *);
	static int FMod(lua_State *);
	static int Pow(lua_State *);
	static int SetAlphaTestThreshold(lua_State *);
	static int SetGenerateMipmaps(lua_State *);
	static int SetOrientationAllowed(lua_State *);
	static int SetTransitionMode(lua_State *);
	static int SetSortTextures(lua_State *);
	static int SetSortDepth(lua_State *);
	static int SetSortTransparentDepth(lua_State *);
	static int SetSortCreated(lua_State *);
	static int ScreenFPS(lua_State *);
	static int GetPolygonsDrawn(lua_State *);
	static int GetVerticesProcessed(lua_State *);
	static int EnableClearDepth(lua_State *);
	static int EnableClearColor(lua_State *);
	static int SetBorderColor(lua_State *);
	static int SetClearColor(lua_State *);
	static int BindDefaultFramebuffer(lua_State *);
	static int SetDefaultMagFilter(lua_State *);
	static int SetDefaultMinFilter(lua_State *);
	static int SetDefaultWrapU(lua_State *);
	static int SetDefaultWrapV(lua_State *);
	static int SetViewOffset(lua_State *);
	static int SetViewZoom(lua_State *);
	static int SetViewZoomMode(lua_State *);
	static int GetViewOffsetX(lua_State *);
	static int GetViewOffsetY(lua_State *);
	static int GetViewZoom(lua_State *);
	static int SetScissor(lua_State *);
	static int SetIntendedDeviceSize(lua_State *);
	static int DebugInfo(lua_State *);
	static int Error(lua_State *);
	static int Warning(lua_State *);
	static int SetErrorMode(lua_State *);
	static int GetLastError(lua_State *);
	static int GetErrorOccurred(lua_State *);
	static int SetWarningCallback(lua_State *);
	static int SetErrorCallback(lua_State *);
	static int SetDebugCallback(lua_State *);
	static int Message(lua_State *);
	static int GetImagePtr(lua_State *);
	static int LoadImage(lua_State *);
	static int LoadSubImage(lua_State *);
	static int CreateImageColor(lua_State *);
	static int CreateRenderImage(lua_State *);
	static int GetImageExists(lua_State *);
	static int DeleteImage(lua_State *);
	static int DeleteAllImages(lua_State *);
	static int GetImageWidth(lua_State *);
	static int GetImageHeight(lua_State *);
	static int SetImageMinFilter(lua_State *);
	static int SetImageMagFilter(lua_State *);
	static int SetImageWrapU(lua_State *);
	static int SetImageWrapV(lua_State *);
	static int SetImageMask(lua_State *);
	static int SaveImage(lua_State *);
	static int CopyImage(lua_State *);
	static int GetImage(lua_State *);
	static int GetImageFilename(lua_State *);
	static int SetImageSavePixels(lua_State *);
	static int SetImageTransparentColor(lua_State *);
	static int ChooseImage(lua_State *);
	static int ShowChooseImageScreen(lua_State *);
	static int ChooseInternal(lua_State *);
	static int GetChosenImage(lua_State *);
	static int IsChoosingImage(lua_State *);
	static int ShowImageCaptureScreen(lua_State *);
	static int CaptureImage(lua_State *);
	static int CaptureInternal(lua_State *);
	static int CancelCapture(lua_State *);
	static int GetCapturedImage(lua_State *);
	static int IsCapturingImage(lua_State *);
	static int DecodeQRCode(lua_State *);
	static int EncodeQRCode(lua_State *);
	static int PrintImage(lua_State *);
	static int SetRenderToImage(lua_State *);
	static int SetRenderToScreen(lua_State *);
	static int IsSupportedDepthTexture(lua_State *);
	static int GetSpritePtr(lua_State *);
	static int GetSpriteImageID(lua_State *);
	static int CreateSprite(lua_State *);
	static int LoadSprite(lua_State *);
	static int CreateDummySprite(lua_State *);
	static int CloneSprite(lua_State *);
	static int DeleteSprite(lua_State *);
	static int DeleteAllSprites(lua_State *);
	static int SetSpritePosition(lua_State *);
	static int SetSpritePositionByOffset(lua_State *);
	static int SetSpriteX(lua_State *);
	static int SetSpriteY(lua_State *);
	static int SetSpriteAngle(lua_State *);
	static int SetSpriteAngleRad(lua_State *);
	static int SetSpriteDepth(lua_State *);
	static int SetSpriteFlip(lua_State *);
	static int SetSpriteSnap(lua_State *);
	static int SetSpriteVisible(lua_State *);
	static int SetSpriteActive(lua_State *);
	static int SetSpriteImage(lua_State *);
	static int SetSpriteAdditionalImage(lua_State *);
	static int SetSpriteUV(lua_State *);
	static int ResetSpriteUV(lua_State *);
	static int GetSpriteExists(lua_State *);
	static int GetSpriteX(lua_State *);
	static int GetSpriteY(lua_State *);
	static int GetSpriteXByOffset(lua_State *);
	static int GetSpriteYByOffset(lua_State *);
	static int GetSpriteWidth(lua_State *);
	static int GetSpriteHeight(lua_State *);
	static int GetSpriteAngle(lua_State *);
	static int GetSpriteAngleRad(lua_State *);
	static int GetSpriteScaleX(lua_State *);
	static int GetSpriteScaleY(lua_State *);
	static int GetSpriteHitTest(lua_State *);
	static int GetSpriteDepth(lua_State *);
	static int GetSpriteColorRed(lua_State *);
	static int GetSpriteColorGreen(lua_State *);
	static int GetSpriteColorBlue(lua_State *);
	static int GetSpriteColorAlpha(lua_State *);
	static int GetSpritePlaying(lua_State *);
	static int GetSpriteVisible(lua_State *);
	static int GetSpriteActive(lua_State *);
	static int GetSpriteGroup(lua_State *);
	static int GetSpriteXFromPixel(lua_State *);
	static int GetSpriteYFromPixel(lua_State *);
	static int GetSpritePixelFromX(lua_State *);
	static int GetSpritePixelFromY(lua_State *);
	static int GetWorldXFromSprite(lua_State *);
	static int GetWorldYFromSprite(lua_State *);
	static int GetSpriteXFromWorld(lua_State *);
	static int GetSpriteYFromWorld(lua_State *);
	static int SetSpriteSize(lua_State *);
	static int SetSpriteAnimation(lua_State *);
	static int AddSpriteAnimationFrame(lua_State *);
	static int ClearSpriteAnimationFrames(lua_State *);
	static int SetSpriteSpeed(lua_State *);
	static int PlaySprite(lua_State *);
	static int StopSprite(lua_State *);
	static int ResumeSprite(lua_State *);
	static int SetSpriteFrame(lua_State *);
	static int GetSpriteCurrentFrame(lua_State *);
	static int GetSpriteFrameCount(lua_State *);
	static int SetSpriteTransparency(lua_State *);
	static int SetSpriteOffset(lua_State *);
	static int SetSpriteColor(lua_State *);
	static int SetSpriteColorRed(lua_State *);
	static int SetSpriteColorGreen(lua_State *);
	static int SetSpriteColorBlue(lua_State *);
	static int SetSpriteColorAlpha(lua_State *);
	static int SetSpriteUVBorder(lua_State *);
	static int SetSpriteUVOffset(lua_State *);
	static int SetSpriteUVScale(lua_State *);
	static int FixSpriteToScreen(lua_State *);
	static int SetSpriteScale(lua_State *);
	static int SetSpriteScaleByOffset(lua_State *);
	static int SetSpriteScissor(lua_State *);
	static int SetSpriteShader(lua_State *);
	static int SetSpriteGroup(lua_State *);
	static int SetSpriteCategoryBits(lua_State *);
	static int SetSpriteCategoryBit(lua_State *);
	static int SetSpriteCollideBits(lua_State *);
	static int SetSpriteCollideBit(lua_State *);
	static int DrawSprite(lua_State *);
	static int SetPhysicsScale(lua_State *);
	static int SetPhysicsGravity(lua_State *);
	static int SetPhysicsDebugOn(lua_State *);
	static int SetPhysicsDebugOff(lua_State *);
	static int SetPhysicsThreading(lua_State *);
	static int SetPhysicsCCD(lua_State *);
	static int SetPhysicsSleeping(lua_State *);
	static int SetPhysicsMaxPolygonPoints(lua_State *);
	static int GetPhysicsWorld(lua_State *);
	static int GetPhysicsSolveTime(lua_State *);
	static int GetPhysicsIslandCount(lua_State *);
	static int SetPhysicsWallTop(lua_State *);
	static int SetPhysicsWallLeft(lua_State *);
	static int SetPhysicsWallRight(lua_State *);
	static int SetPhysicsWallBottom(lua_State *);
	static int CreatePhysicsForce(lua_State *);
	static int DeletePhysicsForce(lua_State *);
	static int SetPhysicsForcePosition(lua_State *);
	static int SetPhysicsForcePower(lua_State *);
	static int SetPhysicsForceRange(lua_State *);
	static int SetSpriteShape(lua_State *);
	static int SetSpriteShapeBox(lua_State *);
	static int SetSpriteShapeCircle(lua_State *);
	static int SetSpriteShapePolygon(lua_State *);
	static int AddSpriteShapeBox(lua_State *);
	static int AddSpriteShapeCircle(lua_State *);
	static int AddSpriteShapePolygon(lua_State *);
	static int ClearSpriteShapes(lua_State *);
	static int SetSpritePhysicsCOM(lua_State *);
	static int CalculateSpritePhysicsCOM(lua_State *);
	static int SetSpritePhysicsOn(lua_State *);
	static int SetSpritePhysicsOff(lua_State *);
	static int SetSpritePhysicsDelete(lua_State *);
	static int SetSpritePhysicsFriction(lua_State *);
	static int SetSpritePhysicsRestitution(lua_State *);
	static int SetSpritePhysicsCanRotate(lua_State *);
	static int SetSpritePhysicsVelocity(lua_State *);
	static int SetSpritePhysicsAngularVelocity(lua_State *);
	static int SetSpritePhysicsDamping(lua_State *);
	static int SetSpritePhysicsAngularDamping(lua_State *);
	static int SetSpritePhysicsIsBullet(lua_State *);
	static int SetSpritePhysicsMass(lua_State *);
	static int SetSpritePhysicsIsSensor(lua_State *);
	static int SetSpritePhysicsForce(lua_State *);
	static int SetSpritePhysicsTorque(lua_State *);
	static int SetSpritePhysicsImpulse(lua_State *);
	static int SetSpritePhysicsAngularImpulse(lua_State *);
	static int GetSpritePhysicsVelocityX(lua_State *);
	static int GetSpritePhysicsVelocityY(lua_State *);
	static int GetSpritePhysicsAngularVelocity(lua_State *);
	static int GetSpritePhysicsMass(lua_State *);
	static int DeleteJoint(lua_State *);
	static int GetJointExists(lua_State *);
	static int CreateDistanceJoint(lua_State *);
	static int CreateRevoluteJoint(lua_State *);
	static int CreatePrismaticJoint(lua_State *);
	static int CreatePulleyJoint(lua_State *);
	static int CreateMouseJoint(lua_State *);
	static int CreateLineJoint(lua_State *);
	static int CreateWeldJoint(lua_State *);
	static int CreateGearJoint(lua_State *);
	static int CreatePulleyJoint2(lua_State *);
	static int FinishPulleyJoint(lua_State *);
	static int SetJointLimitOn(lua_State *);
	static int SetJointLimitOff(lua_State *);
	static int SetJointMotorOn(lua_State *);
	static int SetJointMotorOff(lua_State *);
	static int SetJointMouseTarget(lua_State *);
	static int GetJointReactionForceX(lua_State *);
	static int GetJointReactionForceY(lua_State *);
	static int GetJointReactionTorque(lua_State *);
	static int PhysicsRayCast(lua_State *);
	static int PhysicsRayCastGroup(lua_State *);
	static int PhysicsRayCastCategory(lua_State *);
	static int SpriteRayCast(lua_State *);
	static int SpriteRayCastGroup(lua_State *);
	static int SpriteRayCastCategory(lua_State *);
	static int SpriteRayCastSingle(lua_State *);
	static int GetRayCastSpriteID(lua_State *);
	static int GetRayCastSprite(lua_State *);
	static int GetRayCastX(lua_State *);
	static int GetRayCastY(lua_State *);
	static int GetRayCastNormalX(lua_State *);
	static int GetRayCastNormalY(lua_State *);
	static int GetRayCastFraction(lua_State *);
	static int GetSpriteInBox(lua_State *);
	static int GetSpriteInCircle(lua_State *);
	static int GetSpriteCollision(lua_State *);
	static int GetSpriteHit(lua_State *);
	static int GetSpriteHitGroup(lua_State *);
	static int GetSpriteHitCategory(lua_State *);
	static int GetSpriteDistance(lua_State *);
	static int GetSpriteDistancePoint1X(lua_State *);
	static int GetSpriteDistancePoint1Y(lua_State *);
	static int GetSpriteDistancePoint2X(lua_State *);
	static int GetSpriteDistancePoint2Y(lua_State *);
	static int GetFirstContact(lua_State *);
	static int GetNextContact(lua_State *);
	static int GetContactWorldX(lua_State *);
	static int GetContactWorldY(lua_State *);
	static int GetContactSpriteID1(lua_State *);
	static int GetContactSpriteID2(lua_State *);
	static int GetContactSprite1(lua_State *);
	static int GetContactSprite2(lua_State *);
	static int GetSpriteFirstContact(lua_State *);
	static int GetSpriteNextContact(lua_State *);
	static int GetSpriteContactWorldX(lua_State *);
	static int GetSpriteContactWorldY(lua_State *);
	static int GetSpriteContactSpriteID2(lua_State *);
	static int GetSpriteContactSprite2(lua_State *);
	static int GetPhysicsCollision(lua_State *);
	static int GetPhysicsCollisionX(lua_State *);
	static int GetPhysicsCollisionY(lua_State *);
	static int GetPhysicsCollisionWorldX(lua_State *);
	static int GetPhysicsCollisionWorldY(lua_State *);
	static int CreateParticles(lua_State *);
	static int GetParticlesExists(lua_State *);
	static int DeleteParticles(lua_State *);
	static int SetParticlesPosition(lua_State *);
	static int SetParticlesDepth(lua_State *);
	static int SetParticlesFrequency(lua_State *);
	static int SetParticlesStartZone(lua_State *);
	static int SetParticlesDirection(lua_State *);
	static int SetParticlesVelocityRange(lua_State *);
	static int SetParticlesAngle(lua_State *);
	static int SetParticlesAngleRad(lua_State *);
	static int SetParticlesRotationRange(lua_State *);
	static int SetParticlesRotationRangeRad(lua_State *);
	static int SetParticlesFaceDirection(lua_State *);
	static int SetParticlesSize(lua_State *);
	static int SetParticlesLife(lua_State *);
	static int SetParticlesMax(lua_State *);
	static int ResetParticleCount(lua_State *);
	static int SetParticlesImage(lua_State *);
	static int SetParticlesColorInterpolation(lua_State *);
	static int SetParticlesVisible(lua_State *);
	static int SetParticlesActive(lua_State *);
	static int SetParticlesTransparency(lua_State *);
	static int GetParticlesX(lua_State *);
	static int GetParticlesY(lua_State *);
	static int GetParticlesDepth(lua_State *);
	static int GetParticlesVisible(lua_State *);
	static int GetParticlesActive(lua_State *);
	static int GetParticlesFrequency(lua_State *);
	static int GetParticlesDirectionX(lua_State *);
	static int GetParticlesDirectionY(lua_State *);
	static int GetParticlesAngle(lua_State *);
	static int GetParticlesAngleRad(lua_State *);
	static int GetParticlesSize(lua_State *);
	static int GetParticlesLife(lua_State *);
	static int GetParticlesMaxReached(lua_State *);
	static int AddParticlesForce(lua_State *);
	static int ClearParticlesForces(lua_State *);
	static int AddParticlesColorKeyFrame(lua_State *);
	static int ClearParticlesColors(lua_State *);
	static int AddParticlesScaleKeyFrame(lua_State *);
	static int ClearParticlesScales(lua_State *);
	static int FixParticlesToScreen(lua_State *);
	static int UpdateParticles(lua_State *);
	static int OffsetParticles(lua_State *);
	static int SetTextDefaultFontImage(lua_State *);
	static int SetTextDefaultExtendedFontImage(lua_State *);
	static int SetTextDefaultMinFilter(lua_State *);
	static int SetTextDefaultMagFilter(lua_State *);
	static int CreateText(lua_State *);
	static int DeleteText(lua_State *);
	static int DeleteAllText(lua_State *);
	static int SetTextString(lua_State *);
	static int SetTextPosition(lua_State *);
	static int SetTextX(lua_State *);
	static int SetTextY(lua_State *);
	static int SetTextSize(lua_State *);
	static int SetTextSpacing(lua_State *);
	static int SetTextLineSpacing(lua_State *);
	static int SetTextDepth(lua_State *);
	static int SetTextVisible(lua_State *);
	static int SetTextAlignment(lua_State *);
	static int SetTextColor(lua_State *);
	static int SetTextColorRed(lua_State *);
	static int SetTextColorGreen(lua_State *);
	static int SetTextColorBlue(lua_State *);
	static int SetTextColorAlpha(lua_State *);
	static int SetTextFontImage(lua_State *);
	static int SetTextExtendedFontImage(lua_State *);
	static int FixTextToScreen(lua_State *);
	static int SetTextMaxWidth(lua_State *);
	static int SetTextScissor(lua_State *);
	static int SetTextTransparency(lua_State *);
	static int GetTextColorRed(lua_State *);
	static int GetTextColorGreen(lua_State *);
	static int GetTextColorBlue(lua_State *);
	static int GetTextColorAlpha(lua_State *);
	static int GetTextExists(lua_State *);
	static int GetTextX(lua_State *);
	static int GetTextY(lua_State *);
	static int GetTextLength(lua_State *);
	static int GetTextTotalWidth(lua_State *);
	static int GetTextTotalHeight(lua_State *);
	static int GetTextHitTest(lua_State *);
	static int GetTextVisible(lua_State *);
	static int GetTextDepth(lua_State *);
	static int GetTextSize(lua_State *);
	static int GetTextString(lua_State *);
	static int GetTextSpacing(lua_State *);
	static int GetTextLineSpacing(lua_State *);
	static int SetTextCharPosition(lua_State *);
	static int SetTextCharX(lua_State *);
	static int SetTextCharY(lua_State *);
	static int SetTextCharAngle(lua_State *);
	static int SetTextCharAngleRad(lua_State *);
	static int SetTextCharColor(lua_State *);
	static int SetTextCharColorRed(lua_State *);
	static int SetTextCharColorGreen(lua_State *);
	static int SetTextCharColorBlue(lua_State *);
	static int SetTextCharColorAlpha(lua_State *);
	static int GetTextCharX(lua_State *);
	static int GetTextCharY(lua_State *);
	static int GetTextCharAngle(lua_State *);
	static int GetTextCharAngleRad(lua_State *);
	static int GetTextCharColorRed(lua_State *);
	static int GetTextCharColorGreen(lua_State *);
	static int GetTextCharColorBlue(lua_State *);
	static int GetTextCharColorAlpha(lua_State *);
	static int CreateSkeleton2D(lua_State *);
	static int GetSkeleton2DExists(lua_State *);
	static int DeleteSkeleton2D(lua_State *);
	static int LoadSkeleton2DFromSpineFile(lua_State *);
	static int LoadSkeleton2DFromSpriterFile(lua_State *);
	static int SetSkeleton2DPosition(lua_State *);
	static int SetSkeleton2DRotation(lua_State *);
	static int SetSkeleton2DFlip(lua_State *);
	static int SetSkeleton2DDepth(lua_State *);
	static int FixSkeleton2DToScreen(lua_State *);
	static int GetSkeleton2DX(lua_State *);
	static int GetSkeleton2DY(lua_State *);
	static int GetSkeleton2DAngle(lua_State *);
	static int GetSkeleton2DBone(lua_State *);
	static int GetSkeleton2DBoneParent(lua_State *);
	static int GetSkeleton2DBoneX(lua_State *);
	static int GetSkeleton2DBoneY(lua_State *);
	static int GetSkeleton2DBoneAngle(lua_State *);
	static int GetSkeleton2DBoneCurrX(lua_State *);
	static int GetSkeleton2DBoneCurrY(lua_State *);
	static int GetSkeleton2DBoneCurrAngle(lua_State *);
	static int SetSkeleton2DBonePosition(lua_State *);
	static int SetSkeleton2DBoneAngle(lua_State *);
	static int SetSkeleton2DBoneScale(lua_State *);
	static int SetSkeleton2DBoneMode(lua_State *);
	static int PlaySkeleton2DAnimation(lua_State *);
	static int SetSkeleton2DAnimationFrame(lua_State *);
	static int SetSkeleton2DAnimationSpeed(lua_State *);
	static int GetSkeleton2DCurrentTime(lua_State *);
	static int StopSkeleton2DAnimation(lua_State *);
	static int GetSkeleton2DIsAnimating(lua_State *);
	static int GetSkeleton2DIsTweening(lua_State *);
	static int GetSkeleton2DAnimationTime(lua_State *);
	static int DeleteTween(lua_State *);
	static int GetTweenExists(lua_State *);
	static int TweenLinear(lua_State *);
	static int TweenSmooth1(lua_State *);
	static int TweenSmooth2(lua_State *);
	static int TweenEaseIn1(lua_State *);
	static int TweenEaseIn2(lua_State *);
	static int TweenEaseOut1(lua_State *);
	static int TweenEaseOut2(lua_State *);
	static int TweenBounce(lua_State *);
	static int TweenOvershoot(lua_State *);
	static int CreateTweenSprite(lua_State *);
	static int GetTweenSpriteExists(lua_State *);
	static int SetTweenSpriteX(lua_State *);
	static int SetTweenSpriteY(lua_State *);
	static int SetTweenSpriteAngle(lua_State *);
	static int SetTweenSpriteSizeX(lua_State *);
	static int SetTweenSpriteSizeY(lua_State *);
	static int SetTweenSpriteRed(lua_State *);
	static int SetTweenSpriteGreen(lua_State *);
	static int SetTweenSpriteBlue(lua_State *);
	static int SetTweenSpriteAlpha(lua_State *);
	static int PlayTweenSprite(lua_State *);
	static int StopTweenSprite(lua_State *);
	static int GetTweenSpritePlaying(lua_State *);
	static int CreateTweenText(lua_State *);
	static int GetTweenTextExists(lua_State *);
	static int SetTweenTextX(lua_State *);
	static int SetTweenTextY(lua_State *);
	static int SetTweenTextAngle(lua_State *);
	static int SetTweenTextSize(lua_State *);
	static int SetTweenTextSpacing(lua_State *);
	static int SetTweenTextLineSpacing(lua_State *);
	static int SetTweenTextRed(lua_State *);
	static int SetTweenTextGreen(lua_State *);
	static int SetTweenTextBlue(lua_State *);
	static int SetTweenTextAlpha(lua_State *);
	static int PlayTweenText(lua_State *);
	static int StopTweenText(lua_State *);
	static int GetTweenTextPlaying(lua_State *);
	static int CreateTweenChar(lua_State *);
	static int GetTweenCharExists(lua_State *);
	static int SetTweenCharX(lua_State *);
	static int SetTweenCharY(lua_State *);
	static int SetTweenCharAngle(lua_State *);
	static int SetTweenCharRed(lua_State *);
	static int SetTweenCharGreen(lua_State *);
	static int SetTweenCharBlue(lua_State *);
	static int SetTweenCharAlpha(lua_State *);
	static int PlayTweenChar(lua_State *);
	static int StopTweenChar(lua_State *);
	static int GetTweenCharPlaying(lua_State *);
	static int CreateTweenObject(lua_State *);
	static int GetTweenObjectExists(lua_State *);
	static int SetTweenObjectX(lua_State *);
	static int SetTweenObjectY(lua_State *);
	static int SetTweenObjectZ(lua_State *);
	static int SetTweenObjectAngleX(lua_State *);
	static int SetTweenObjectAngleY(lua_State *);
	static int SetTweenObjectAngleZ(lua_State *);
	static int SetTweenObjectScaleX(lua_State *);
	static int SetTweenObjectScaleY(lua_State *);
	static int SetTweenObjectScaleZ(lua_State *);
	static int SetTweenObjectRed(lua_State *);
	static int SetTweenObjectGreen(lua_State *);
	static int SetTweenObjectBlue(lua_State *);
	static int SetTweenObjectAlpha(lua_State *);
	static int PlayTweenObject(lua_State *);
	static int StopTweenObject(lua_State *);
	static int GetTweenObjectPlaying(lua_State *);
	static int CreateTweenCamera(lua_State *);
	static int GetTweenCameraExists(lua_State *);
	static int SetTweenCameraX(lua_State *);
	static int SetTweenCameraY(lua_State *);
	static int SetTweenCameraZ(lua_State *);
	static int SetTweenCameraAngleX(lua_State *);
	static int SetTweenCameraAngleY(lua_State *);
	static int SetTweenCameraAngleZ(lua_State *);
	static int SetTweenCameraFOV(lua_State *);
	static int PlayTweenCamera(lua_State *);
	static int StopTweenCamera(lua_State *);
	static int GetTweenCameraPlaying(lua_State *);
	static int CreateTweenChain(lua_State *);
	static int DeleteTweenChain(lua_State *);
	static int ClearTweenChain(lua_State *);
	static int AddTweenChainSprite(lua_State *);
	static int AddTweenChainText(lua_State *);
	static int AddTweenChainChar(lua_State *);
	static int AddTweenChainObject(lua_State *);
	static int AddTweenChainCamera(lua_State *);
	static int PlayTweenChain(lua_State *);
	static int PauseTweenChain(lua_State *);
	static int StopTweenChain(lua_State *);
	static int GetTweenChainPlaying(lua_State *);
	static int SetTweenChainTime(lua_State *);
	static int GetTweenChainEndTime(lua_State *);
	static int UpdateAllTweens(lua_State *);
	static int UpdateTweenChain(lua_State *);
	static int Print(lua_State *);
	static int PrintC(lua_State *);
	static int SetPrintSize(lua_State *);
	static int GetPrintSize(lua_State *);
	static int SetPrintSpacing(lua_State *);
	static int SetPrintColor(lua_State *);
	static int GetMultiTouchExists(lua_State *);
	static int GetMouseExists(lua_State *);
	static int GetKeyboardExists(lua_State *);
	static int GetJoystickExists(lua_State *);
	static int GetCameraExists(lua_State *);
	static int GetAccelerometerExists(lua_State *);
	static int GetGyroSensorExists(lua_State *);
	static int GetProximitySensorExists(lua_State *);
	static int GetLightSensorExists(lua_State *);
	static int GetMagneticSensorExists(lua_State *);
	static int GetRotationVectorSensorExists(lua_State *);
	static int GetGPSSensorExists(lua_State *);
	static int GetRawTouchCount(lua_State *);
	static int GetRawFirstTouchEvent(lua_State *);
	static int GetRawNextTouchEvent(lua_State *);
	static int GetRawTouchType(lua_State *);
	static int GetRawTouchStartX(lua_State *);
	static int GetRawTouchStartY(lua_State *);
	static int GetRawTouchCurrentX(lua_State *);
	static int GetRawTouchCurrentY(lua_State *);
	static int GetRawTouchLastX(lua_State *);
	static int GetRawTouchLastY(lua_State *);
	static int GetRawTouchReleased(lua_State *);
	static int SetRawTouchValue(lua_State *);
	static int GetRawTouchValue(lua_State *);
	static int GetRawTouchTime(lua_State *);
	static int GetRawMouseX(lua_State *);
	static int GetRawMouseY(lua_State *);
	static int GetRawMouseWheel(lua_State *);
	static int GetRawMouseWheelDelta(lua_State *);
	static int GetRawMouseLeftPressed(lua_State *);
	static int GetRawMouseLeftState(lua_State *);
	static int GetRawMouseLeftReleased(lua_State *);
	static int GetRawMouseRightPressed(lua_State *);
	static int GetRawMouseRightState(lua_State *);
	static int GetRawMouseRightReleased(lua_State *);
	static int GetRawMouseMiddlePressed(lua_State *);
	static int GetRawMouseMiddleState(lua_State *);
	static int GetRawMouseMiddleReleased(lua_State *);
	static int SetRawMouseVisible(lua_State *);
	static int SetRawMousePosition(lua_State *);
	static int FixOrientationByDefault(lua_State *);
	static int GetRawAccelX(lua_State *);
	static int GetRawAccelY(lua_State *);
	static int GetRawAccelZ(lua_State *);
	static int GetRawGyroVelocityX(lua_State *);
	static int GetRawGyroVelocityY(lua_State *);
	static int GetRawGyroVelocityZ(lua_State *);
	static int GetRawProximityDistance(lua_State *);
	static int GetRawLightLevel(lua_State *);
	static int GetRawMagneticX(lua_State *);
	static int GetRawMagneticY(lua_State *);
	static int GetRawMagneticZ(lua_State *);
	static int GetRawRotationVectorX(lua_State *);
	static int GetRawRotationVectorY(lua_State *);
	static int GetRawRotationVectorZ(lua_State *);
	static int GetRawRotationVectorW(lua_State *);
	static int GetRawRotationVectorX2(lua_State *);
	static int GetRawRotationVectorY2(lua_State *);
	static int GetRawRotationVectorZ2(lua_State *);
	static int GetRawRotationVectorW2(lua_State *);
	static int StartGPSTracking(lua_State *);
	static int StopGPSTracking(lua_State *);
	static int GetRawGPSLatitude(lua_State *);
	static int GetRawGPSLongitude(lua_State *);
	static int GetRawGPSAltitude(lua_State *);
	static int CompleteRawJoystickDetection(lua_State *);
	static int GetRawJoystickExists(lua_State *);
	static int GetRawJoystickConnected(lua_State *);
	static int GetRawJoystickX(lua_State *);
	static int GetRawJoystickY(lua_State *);
	static int GetRawJoystickZ(lua_State *);
	static int GetRawJoystickRX(lua_State *);
	static int GetRawJoystickRY(lua_State *);
	static int GetRawJoystickRZ(lua_State *);
	static int GetRawJoystickButtonPressed(lua_State *);
	static int GetRawJoystickButtonState(lua_State *);
	static int GetRawJoystickButtonReleased(lua_State *);
	static int SetRawJoystickDeadZone(lua_State *);
	static int AddVirtualJoystick(lua_State *);
	static int DeleteVirtualJoystick(lua_State *);
	static int GetVirtualJoystickExists(lua_State *);
	static int GetVirtualJoystickX(lua_State *);
	static int GetVirtualJoystickY(lua_State *);
	static int SetVirtualJoystickAlpha(lua_State *);
	static int SetVirtualJoystickPosition(lua_State *);
	static int SetVirtualJoystickSize(lua_State *);
	static int SetVirtualJoystickActive(lua_State *);
	static int SetVirtualJoystickVisible(lua_State *);
	static int SetVirtualJoystickImageInner(lua_State *);
	static int SetVirtualJoystickImageOuter(lua_State *);
	static int SetVirtualJoystickDeadZone(lua_State *);
	static int AddVirtualButton(lua_State *);
	static int DeleteVirtualButton(lua_State *);
	static int GetVirtualButtonExists(lua_State *);
	static int GetVirtualButtonPressed(lua_State *);
	static int GetVirtualButtonReleased(lua_State *);
	static int GetVirtualButtonState(lua_State *);
	static int SetVirtualButtonColor(lua_State *);
	static int SetVirtualButtonAlpha(lua_State *);
	static int SetVirtualButtonPosition(lua_State *);
	static int SetVirtualButtonSize(lua_State *);
	static int SetVirtualButtonActive(lua_State *);
	static int SetVirtualButtonVisible(lua_State *);
	static int SetVirtualButtonImageUp(lua_State *);
	static int SetVirtualButtonImageDown(lua_State *);
	static int SetVirtualButtonText(lua_State *);
	static int GetRawKeyPressed(lua_State *);
	static int GetRawKeyState(lua_State *);
	static int GetRawKeyReleased(lua_State *);
	static int GetRawLastKey(lua_State *);
	static int GetPointerPressed(lua_State *);
	static int GetPointerState(lua_State *);
	static int GetPointerReleased(lua_State *);
	static int GetPointerGesture(lua_State *);
	static int GetPointerX(lua_State *);
	static int GetPointerY(lua_State *);
	static int GetDirectionX(lua_State *);
	static int GetDirectionY(lua_State *);
	static int GetDirectionAngle(lua_State *);
	static int GetDirectionSpeed(lua_State *);
	static int GetJoystickX(lua_State *);
	static int GetJoystickY(lua_State *);
	static int SetJoystickScreenPosition(lua_State *);
	static int SetJoystickDeadZone(lua_State *);
	static int GetButtonPressed(lua_State *);
	static int GetButtonState(lua_State *);
	static int GetButtonReleased(lua_State *);
	static int SetButtonScreenPosition(lua_State *);
	static int StartTextInput(lua_State *);
	static int StopTextInput(lua_State *);
	static int GetTextInputState(lua_State *);
	static int GetTextInputCompleted(lua_State *);
	static int GetTextInputCancelled(lua_State *);
	static int GetTextInput(lua_State *);
	static int GetPrevChar(lua_State *);
	static int GetLastChar(lua_State *);
	static int SetCursorBlinkTime(lua_State *);
	static int SetTextInputMaxChars(lua_State *);
	static int SetTextInputLabel(lua_State *);
	static int CreateEditBox(lua_State *);
	static int GetEditBoxExists(lua_State *);
	static int DeleteEditBox(lua_State *);
	static int GetEditBoxHasFocus(lua_State *);
	static int GetCurrentEditBox(lua_State *);
	static int SetEditBoxPosition(lua_State *);
	static int SetEditBoxSize(lua_State *);
	static int SetEditBoxDepth(lua_State *);
	static int SetEditBoxBorderSize(lua_State *);
	static int SetEditBoxBorderColor(lua_State *);
	static int SetEditBoxBackgroundColor(lua_State *);
	static int SetEditBoxText(lua_State *);
	static int SetEditBoxTextColor(lua_State *);
	static int SetEditBoxCursorColor(lua_State *);
	static int SetEditBoxFontImage(lua_State *);
	static int SetEditBoxExtendedFontImage(lua_State *);
	static int SetEditBoxTextSize(lua_State *);
	static int SetEditBoxCursorPosition(lua_State *);
	static int SetEditBoxFocus(lua_State *);
	static int SetEditBoxActive(lua_State *);
	static int SetEditBoxVisible(lua_State *);
	static int SetEditBoxBorderImage(lua_State *);
	static int SetEditBoxBackgroundImage(lua_State *);
	static int SetEditBoxCursorBlinkTime(lua_State *);
	static int SetEditBoxCursorWidth(lua_State *);
	static int SetEditBoxMaxChars(lua_State *);
	static int SetEditBoxMaxLines(lua_State *);
	static int SetEditBoxMultiLine(lua_State *);
	static int SetEditBoxScissor(lua_State *);
	static int SetEditBoxPasswordMode(lua_State *);
	static int SetEditBoxUseAlternateInput(lua_State *);
	static int SetEditBoxWrapMode(lua_State *);
	static int FixEditBoxToScreen(lua_State *);
	static int GetEditBoxText(lua_State *);
	static int GetEditBoxX(lua_State *);
	static int GetEditBoxY(lua_State *);
	static int GetEditBoxWidth(lua_State *);
	static int GetEditBoxHeight(lua_State *);
	static int GetEditBoxChanged(lua_State *);
	static int GetEditBoxActive(lua_State *);
	static int GetEditBoxVisible(lua_State *);
	static int GetEditBoxLines(lua_State *);
	static int LoadSound(lua_State *);
	static int PlaySound(lua_State *);
	static int StopSound(lua_State *);
	static int DeleteSound(lua_State *);
	static int GetSoundInstances(lua_State *);
	static int GetSoundsPlaying(lua_State *);
	static int SetSoundSystemVolume(lua_State *);
	static int GetSoundExists(lua_State *);
	static int GetSoundMaxRate(lua_State *);
	static int GetSoundMinRate(lua_State *);
	static int SaveSound(lua_State *);
	static int GetSoundInstancePlaying(lua_State *);
	static int GetSoundInstanceVolume(lua_State *);
	static int GetSoundInstanceRate(lua_State *);
	static int SetSoundInstanceVolume(lua_State *);
	static int SetSoundInstanceRate(lua_State *);
	static int SetSoundInstanceBalance(lua_State *);
	static int GetSoundInstanceLoopCount(lua_State *);
	static int StopSoundInstance(lua_State *);
	static int LoadMusic(lua_State *);
	static int SetMusicFileVolume(lua_State *);
	static int PlayMusic(lua_State *);
	static int PauseMusic(lua_State *);
	static int ResumeMusic(lua_State *);
	static int StopMusic(lua_State *);
	static int DeleteMusic(lua_State *);
	static int GetMusicPlaying(lua_State *);
	static int SetMusicSystemVolume(lua_State *);
	static int GetMusicExists(lua_State *);
	static int GetMusicDuration(lua_State *);
	static int GetMusicPosition(lua_State *);
	static int SeekMusic(lua_State *);
	static int RecordSound(lua_State *);
	static int StopSoundRecording(lua_State *);
	static int IsSoundRecording(lua_State *);
	static int SetRawWritePath(lua_State *);
	static int GetWritePath(lua_State *);
	static int GetReadPath(lua_State *);
	static int GetDocumentsPath(lua_State *);
	static int ChooseRawFile(lua_State *);
	static int GetFileExists(lua_State *);
	static int agkDeleteFile(lua_State *);
	static int OpenToWrite(lua_State *);
	static int OpenToRead(lua_State *);
	static int FileIsOpen(lua_State *);
	static int CloseFile(lua_State *);
	static int FileEOF(lua_State *);
	static int GetFileSize(lua_State *);
	static int WriteByte(lua_State *);
	static int WriteInteger(lua_State *);
	static int WriteFloat(lua_State *);
	static int WriteString(lua_State *);
	static int WriteString2(lua_State *);
	static int WriteLine(lua_State *);
	static int ReadByte(lua_State *);
	static int ReadInteger(lua_State *);
	static int ReadFloat(lua_State *);
	static int ReadString(lua_State *);
	static int ReadString2(lua_State *);
	static int ReadLine(lua_State *);
	static int SetCurrentDir(lua_State *);
	static int GetCurrentDir(lua_State *);
	static int SetFolder(lua_State *);
	static int GetFolder(lua_State *);
	static int MakeFolder(lua_State *);
	static int DeleteFolder(lua_State *);
	static int GetFirstFolder(lua_State *);
	static int GetNextFolder(lua_State *);
	static int GetFolderCount(lua_State *);
	static int GetFirstFile(lua_State *);
	static int GetNextFile(lua_State *);
	static int GetFileCount(lua_State *);
	static int CreateBroadcastListener(lua_State *);
	static int DeleteBroadcastListener(lua_State *);
	static int GetBroadcastMessage(lua_State *);
	static int HostNetwork(lua_State *);
	static int SetNetworkNoMoreClients(lua_State *);
	static int JoinNetwork(lua_State *);
	static int IsNetworkActive(lua_State *);
	static int GetDeviceIP(lua_State *);
	static int CloseNetwork(lua_State *);
	static int SetNetworkLatency(lua_State *);
	static int GetNetworkMyClientID(lua_State *);
	static int GetNetworkNumClients(lua_State *);
	static int GetNetworkFirstClient(lua_State *);
	static int GetNetworkNextClient(lua_State *);
	static int GetNetworkClientDisconnected(lua_State *);
	static int DeleteNetworkClient(lua_State *);
	static int GetNetworkClientName(lua_State *);
	static int GetNetworkClientPing(lua_State *);
	static int GetNetworkServerID(lua_State *);
	static int SetNetworkLocalInteger(lua_State *);
	static int SetNetworkLocalFloat(lua_State *);
	static int GetNetworkClientInteger(lua_State *);
	static int GetNetworkClientFloat(lua_State *);
	static int CreateNetworkMessage(lua_State *);
	static int AddNetworkMessageInteger(lua_State *);
	static int AddNetworkMessageFloat(lua_State *);
	static int AddNetworkMessageString(lua_State *);
	static int GetNetworkMessageFromIP(lua_State *);
	static int GetNetworkMessageFromClient(lua_State *);
	static int GetNetworkMessageInteger(lua_State *);
	static int GetNetworkMessageFloat(lua_State *);
	static int GetNetworkMessageString(lua_State *);
	static int DeleteNetworkMessage(lua_State *);
	static int SendNetworkMessage(lua_State *);
	static int GetNetworkMessage(lua_State *);
	static int SetNetworkClientUserData(lua_State *);
	static int GetNetworkClientUserData(lua_State *);
	static int CreateHTTPConnection(lua_State *);
	static int DeleteHTTPConnection(lua_State *);
	static int GetInternetState(lua_State *);
	static int SetHTTPHost(lua_State *);
	static int CloseHTTPConnection(lua_State *);
	static int SetHTTPTimeout(lua_State *);
	static int SendHTTPRequest(lua_State *);
	static int SendHTTPRequestASync(lua_State *);
	static int SendHTTPFile(lua_State *);
	static int GetHTTPResponse(lua_State *);
	static int GetHTTPResponseReady(lua_State *);
	static int GetHTTPResponseC(lua_State *);
	static int GetHTTPFile(lua_State *);
	static int GetHTTPFileComplete(lua_State *);
	static int GetHTTPFileProgress(lua_State *);
	static int OpenBrowser(lua_State *);
	static int Str(lua_State *);
	static int Bin(lua_State *);
	static int Hex(lua_State *);
	static int Val(lua_State *);
	static int ValFloat(lua_State *);
	static int Left(lua_State *);
	static int Right(lua_State *);
	static int Mid(lua_State *);
	static int Asc(lua_State *);
	static int Len(lua_State *);
	static int Chr(lua_State *);
	static int Lower(lua_State *);
	static int Upper(lua_State *);
	static int Spaces(lua_State *);
	static int CountStringTokens(lua_State *);
	static int GetStringToken(lua_State *);
	static int GetManagedSpriteCount(lua_State *);
	static int GetManagedSpriteSortedCount(lua_State *);
	static int GetManagedSpriteDrawnCount(lua_State *);
	static int GetPixelsDrawn(lua_State *);
	static int GetManagedSpriteDrawCalls(lua_State *);
	static int GetParticleDrawnPointCount(lua_State *);
	static int GetParticleDrawnQuadCount(lua_State *);
	static int GetUpdateTime(lua_State *);
	static int GetPhysicsTime(lua_State *);
	static int GetDrawingSetupTime(lua_State *);
	static int GetDrawingTime(lua_State *);
	static int GetLoadedImages(lua_State *);
	static int GetUnassignedImages(lua_State *);
	static int GetUnassignedImageFileName(lua_State *);
	static int GetYearFromUnix64(lua_State *);
	static int GetMonthFromUnix64(lua_State *);
	static int GetDayFromUnix64(lua_State *);
	static int GetHoursFromUnix64(lua_State *);
	static int GetMinutesFromUnix64(lua_State *);
	static int GetSecondsFromUnix64(lua_State *);
	static int GetUnixFromDate64(lua_State *);
	static int GetUnixTime64(lua_State *);
	static int GetYearFromUnix32(lua_State *);
	static int GetYearFromUnix(lua_State *);
	static int GetMonthFromUnix(lua_State *);
	static int GetDaysFromUnix(lua_State *);
	static int GetHoursFromUnix(lua_State *);
	static int GetMinutesFromUnix(lua_State *);
	static int GetSecondsFromUnix(lua_State *);
	static int GetUnixFromDate(lua_State *);
	static int GetUnixTime(lua_State *);
	static int GetLeapYear(lua_State *);
	static int GetCurrentDate(lua_State *);
	static int agkGetCurrentTime(lua_State *);
	static int GetDayOfWeek(lua_State *);
	static int SetInneractiveDetails(lua_State *);
	static int SetAdMobDetails(lua_State *);
	static int SetChartboostDetails(lua_State *);
	static int CreateFullscreenAdvert(lua_State *);
	static int CreateAdvert(lua_State *);
	static int CreateAdvertEx(lua_State *);
	static int SetAdvertPosition(lua_State *);
	static int SetAdvertLocation(lua_State *);
	static int SetAdvertLocationEx(lua_State *);
	static int SetAdvertVisible(lua_State *);
	static int RequestAdvertRefresh(lua_State *);
	static int DeleteAdvert(lua_State *);
	static int Log(lua_State *);
	static int SocialPluginsSetup(lua_State *);
	static int SocialPluginsDestroy(lua_State *);
	static int LoadVideo(lua_State *);
	static int DeleteVideo(lua_State *);
	static int SetVideoDimensions(lua_State *);
	static int PlayVideo(lua_State *);
	static int PauseVideo(lua_State *);
	static int StopVideo(lua_State *);
	static int GetVideoPlaying(lua_State *);
	static int GetVideoPosition(lua_State *);
	static int GetVideoDuration(lua_State *);
	static int SetVideoVolume(lua_State *);
	static int GetVideoWidth(lua_State *);
	static int GetVideoHeight(lua_State *);
	static int  RateApp(lua_State *);
	static int  InAppPurchaseSetKeys(lua_State *);
	static int  InAppPurchaseSetTitle(lua_State *);
	static int  InAppPurchaseAddProductID(lua_State *);
	static int  InAppPurchaseSetup(lua_State *);
	static int  InAppPurchaseActivate(lua_State *);
	static int   GetInAppPurchaseState(lua_State *);
	static int   GetInAppPurchaseAvailable(lua_State *);
	static int  InAppPurchaseRestore(lua_State *);
	static int  FacebookSetup(lua_State *);
	static int  FacebookLogin(lua_State *);
	static int  FacebookLogout(lua_State *);
	static int  FacebookShowLikeButton(lua_State *);
	static int  FacebookDestroyLikeButton(lua_State *);
	static int  FacebookPostOnMyWall(lua_State *);
	static int  FacebookPostOnFriendsWall(lua_State *);
	static int  FacebookInviteFriend(lua_State *);
	static int  FacebookGetFriends(lua_State *);
	static int   FacebookGetFriendsState(lua_State *);
	static int   FacebookGetFriendsCount(lua_State *);
	static int FacebookGetFriendsName(lua_State *);
	static int FacebookGetFriendsID(lua_State *);
	static int  FacebookDownloadFriendsPhoto(lua_State *);
	static int   GetFacebookDownloadState(lua_State *);
	static int GetFacebookDownloadFile(lua_State *);
	static int   GetFacebookLoggedIn(lua_State *);
	static int FacebookGetUserID(lua_State *);
	static int FacebookGetUserName(lua_State *);
	static int  TwitterSetup(lua_State *);
	static int  TwitterMessage(lua_State *);
	static int  NotificationCreate(lua_State *);
	static int  NotificationReset(lua_State *);
	static int   GetNotification(lua_State *);
	static int GetNotificationData(lua_State *);
	static int   GetNotificationType(lua_State *);
	static int  SetNotificationImage(lua_State *);
	static int  SetNotificationText(lua_State *);
	static int SetPushNotificationKeys(lua_State *);
	static int PushNotificationSetup(lua_State *);
	static int GetPushNotificationToken(lua_State *);
	static int CreateZip(lua_State *);
	static int AddZipEntry(lua_State *);
	static int CloseZip(lua_State *);
	static int ExtractZip(lua_State *);
	static int CreateMemblock(lua_State *);
	static int GetMemblockExists(lua_State *);
	static int DeleteMemblock(lua_State *);
	static int GetMemblockPtr(lua_State *);
	static int CopyMemblock(lua_State *);
	static int GetMemblockSize(lua_State *);
	static int GetMemblockByte(lua_State *);
	static int GetMemblockByteSigned(lua_State *);
	static int GetMemblockShort(lua_State *);
	static int GetMemblockInt(lua_State *);
	static int GetMemblockFloat(lua_State *);
	static int GetMemblockString(lua_State *);
	static int SetMemblockByte(lua_State *);
	static int SetMemblockByteSigned(lua_State *);
	static int SetMemblockShort(lua_State *);
	static int SetMemblockInt(lua_State *);
	static int SetMemblockFloat(lua_State *);
	static int SetMemblockString(lua_State *);
	static int CreateMemblockFromImage(lua_State *);
	static int CreateImageFromMemblock(lua_State *);
	static int CreateMemblockFromSound(lua_State *);
	static int CreateSoundFromMemblock(lua_State *);
	static int CreateMemblockFromFile(lua_State *);
	static int CreateFileFromMemblock(lua_State *);
	static int InitialiseSensorCommands(lua_State *);
	static int FreeSensorCommands(lua_State *);
	static int  GetNFCExists(lua_State *);
	static int GetRawNFCCount(lua_State *);
	static int GetRawFirstNFCDevice(lua_State *);
	static int GetRawNextNFCDevice(lua_State *);
	static int GetRawNFCName(lua_State *);
	static int SendRawNFCData(lua_State *);
	static int GetRawNFCDataState(lua_State *);
	static int GetRawNFCData(lua_State *);
	static int GetGameCenterExists(lua_State *);
	static int GameCenterSetup(lua_State *);
	static int GameCenterLogin(lua_State *);
	static int GetGameCenterLoggedIn(lua_State *);
	static int GameCenterSubmitScore(lua_State *);
	static int GameCenterShowLeaderBoard(lua_State *);
	static int GameCenterSubmitAchievement(lua_State *);
	static int GameCenterAchievementsShow(lua_State *);
	static int GameCenterAchievementsReset(lua_State *);
	static int MakeColor(lua_State *);
	static int GetColorRed(lua_State *);
	static int GetColorGreen(lua_State *);
	static int GetColorBlue(lua_State *);
	static int DrawLine(lua_State *);
	static int DrawBox(lua_State *);
	static int DrawEllipse(lua_State *);
	static int SetGlobal3DDepth(lua_State *);
	static int CreateObjectBox(lua_State *);
	static int CreateObjectSphere(lua_State *);
	static int CreateObjectCone(lua_State *);
	static int CreateObjectCylinder(lua_State *);
	static int CreateObjectPlane(lua_State *);
	static int CreateObjectQuad(lua_State *);
	static int LoadObject(lua_State *);
	static int CloneObject(lua_State *);
	static int InstanceObject(lua_State *);
	static int GetObjectExists(lua_State *);
	static int DeleteObject(lua_State *);
	static int GetObjectPtr(lua_State *);
	static int DeleteAllObjects(lua_State *);
	static int SetObjectPosition(lua_State *);
	static int SetObjectRotation(lua_State *);
	static int SetObjectRotationQuat(lua_State *);
	static int SetObjectScale(lua_State *);
	static int MoveObjectLocalX(lua_State *);
	static int MoveObjectLocalY(lua_State *);
	static int MoveObjectLocalZ(lua_State *);
	static int RotateObjectLocalX(lua_State *);
	static int RotateObjectLocalY(lua_State *);
	static int RotateObjectLocalZ(lua_State *);
	static int RotateObjectGlobalX(lua_State *);
	static int RotateObjectGlobalY(lua_State *);
	static int RotateObjectGlobalZ(lua_State *);
	static int GetObjectX(lua_State *);
	static int GetObjectY(lua_State *);
	static int GetObjectZ(lua_State *);
	static int GetObjectAngleX(lua_State *);
	static int GetObjectAngleY(lua_State *);
	static int GetObjectAngleZ(lua_State *);
	static int GetObjectQuatW(lua_State *);
	static int GetObjectQuatX(lua_State *);
	static int GetObjectQuatY(lua_State *);
	static int GetObjectQuatZ(lua_State *);
	static int SetObjectLookAt(lua_State *);
	static int SetObjectImage(lua_State *);
	static int SetObjectShader(lua_State *);
	static int SetObjectColor(lua_State *);
	static int SetObjectLightMode(lua_State *);
	static int SetObjectDepthReadMode(lua_State *);
	static int SetObjectDepthWrite(lua_State *);
	static int SetObjectTransparency(lua_State *);
	static int SetObjectCullMode(lua_State *);
	static int SetObjectVisible(lua_State *);
	static int GetObjectDepthReadMode(lua_State *);
	static int GetObjectDepthWrite(lua_State *);
	static int GetObjectTransparency(lua_State *);
	static int GetObjectCullMode(lua_State *);
	static int GetObjectVisible(lua_State *);
	static int GetObjectInScreen(lua_State *);
	static int DrawObject(lua_State *);
	static int GetScreenXFrom3D(lua_State *);
	static int GetScreenYFrom3D(lua_State *);
	static int Get3DVectorXFromScreen(lua_State *);
	static int Get3DVectorYFromScreen(lua_State *);
	static int Get3DVectorZFromScreen(lua_State *);
	static int SetObjectCollisionMode(lua_State *);
	static int InternalSphereCast(lua_State *);
	static int ObjectRayCast(lua_State *);
	static int ObjectSphereCast(lua_State *);
	static int ObjectSphereSlide(lua_State *);
	static int GetObjectRayCastNumHits(lua_State *);
	static int GetObjectRayCastHitID(lua_State *);
	static int GetObjectRayCastX(lua_State *);
	static int GetObjectRayCastY(lua_State *);
	static int GetObjectRayCastZ(lua_State *);
	static int GetObjectRayCastSlideX(lua_State *);
	static int GetObjectRayCastSlideY(lua_State *);
	static int GetObjectRayCastSlideZ(lua_State *);
	static int GetObjectRayCastNormalX(lua_State *);
	static int GetObjectRayCastNormalY(lua_State *);
	static int GetObjectRayCastNormalZ(lua_State *);
	static int GetObjectRayCastBounceX(lua_State *);
	static int GetObjectRayCastBounceY(lua_State *);
	static int GetObjectRayCastBounceZ(lua_State *);
	static int GetObjectRayCastDistance(lua_State *);
	static int LoadShader(lua_State *);
	static int LoadFullScreenShader(lua_State *);
	static int LoadSpriteShader(lua_State *);
	static int SetShaderConstantByName(lua_State *);
	static int SetCameraPosition(lua_State *);
	static int SetCameraRotationQuat(lua_State *);
	static int SetCameraRotation(lua_State *);
	static int MoveCameraLocalX(lua_State *);
	static int MoveCameraLocalY(lua_State *);
	static int MoveCameraLocalZ(lua_State *);
	static int RotateCameraLocalX(lua_State *);
	static int RotateCameraLocalY(lua_State *);
	static int RotateCameraLocalZ(lua_State *);
	static int RotateCameraGlobalX(lua_State *);
	static int RotateCameraGlobalY(lua_State *);
	static int RotateCameraGlobalZ(lua_State *);
	static int GetCameraX(lua_State *);
	static int GetCameraY(lua_State *);
	static int GetCameraZ(lua_State *);
	static int GetCameraAngleX(lua_State *);
	static int GetCameraAngleY(lua_State *);
	static int GetCameraAngleZ(lua_State *);
	static int GetCameraQuatW(lua_State *);
	static int GetCameraQuatX(lua_State *);
	static int GetCameraQuatY(lua_State *);
	static int GetCameraQuatZ(lua_State *);
	static int SetCameraLookAt(lua_State *);
	static int SetCameraRange(lua_State *);
	static int SetCameraFOV(lua_State *);
	static int SetCameraAspect(lua_State *);
	static int CreateLightPoint(lua_State *);
	static int GetLightPointExists(lua_State *);
	static int DeleteLightPoint(lua_State *);
	static int ClearLightPoints(lua_State *);
	static int SetLightPointPosition(lua_State *);
	static int SetLightPointColor(lua_State *);
	static int SetLightPointRadius(lua_State *);
	static int CreateLightDirectional(lua_State *);
	static int GetLightDirectionalExists(lua_State *);
	static int DeleteLightDirectional(lua_State *);
	static int ClearLightDirectionals(lua_State *);
	static int SetLightDirectionalDirection(lua_State *);
	static int SetLightDirectionalColor(lua_State *);



};